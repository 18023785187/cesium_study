import ComponentDatatype from"./ComponentDatatype.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";function DistanceDisplayConditionGeometryInstanceAttribute(e,t){if(e=defaultValue(e,0),(t=defaultValue(t,Number.MAX_VALUE))<=e)throw new DeveloperError("far distance must be greater than near distance.");this.value=new Float32Array([e,t])}Object.defineProperties(DistanceDisplayConditionGeometryInstanceAttribute.prototype,{componentDatatype:{get:function(){return ComponentDatatype.FLOAT}},componentsPerAttribute:{get:function(){return 2}},normalize:{get:function(){return!1}}}),DistanceDisplayConditionGeometryInstanceAttribute.fromDistanceDisplayCondition=function(e){if(!defined(e))throw new DeveloperError("distanceDisplayCondition is required.");if(e.far<=e.near)throw new DeveloperError("distanceDisplayCondition.far distance must be greater than distanceDisplayCondition.near distance.");return new DistanceDisplayConditionGeometryInstanceAttribute(e.near,e.far)},DistanceDisplayConditionGeometryInstanceAttribute.toValue=function(e,t){if(!defined(e))throw new DeveloperError("distanceDisplayCondition is required.");return defined(t)?(t[0]=e.near,t[1]=e.far,t):new Float32Array([e.near,e.far])};export default DistanceDisplayConditionGeometryInstanceAttribute;