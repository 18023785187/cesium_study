import Cartesian3 from"./Cartesian3.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import Spline from"./Spline.js";function LinearSpline(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).points,i=e.times;if(!defined(t)||!defined(i))throw new DeveloperError("points and times are required.");if(t.length<2)throw new DeveloperError("points.length must be greater than or equal to 2.");if(i.length!==t.length)throw new DeveloperError("times.length must be equal to points.length.");this._times=i,this._points=t,this._lastTimeIndex=0}Object.defineProperties(LinearSpline.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}}}),LinearSpline.prototype.findTimeInterval=Spline.prototype.findTimeInterval,LinearSpline.prototype.wrapTime=Spline.prototype.wrapTime,LinearSpline.prototype.clampTime=Spline.prototype.clampTime,LinearSpline.prototype.evaluate=function(e,t){var i=this.points,r=this.times,n=this._lastTimeIndex=this.findTimeInterval(e,this._lastTimeIndex),o=(e-r[n])/(r[n+1]-r[n]);return defined(t)||(t=new Cartesian3),Cartesian3.lerp(i[n],i[n+1],o,t)};export default LinearSpline;