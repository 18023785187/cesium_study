import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import WebGLConstants from"./WebGLConstants.js";var ComponentDatatype={BYTE:WebGLConstants.BYTE,UNSIGNED_BYTE:WebGLConstants.UNSIGNED_BYTE,SHORT:WebGLConstants.SHORT,UNSIGNED_SHORT:WebGLConstants.UNSIGNED_SHORT,INT:WebGLConstants.INT,UNSIGNED_INT:WebGLConstants.UNSIGNED_INT,FLOAT:WebGLConstants.FLOAT,DOUBLE:WebGLConstants.DOUBLE,getSizeInBytes:function(e){if(!defined(e))throw new DeveloperError("value is required.");switch(e){case ComponentDatatype.BYTE:return Int8Array.BYTES_PER_ELEMENT;case ComponentDatatype.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case ComponentDatatype.SHORT:return Int16Array.BYTES_PER_ELEMENT;case ComponentDatatype.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case ComponentDatatype.INT:return Int32Array.BYTES_PER_ELEMENT;case ComponentDatatype.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;case ComponentDatatype.FLOAT:return Float32Array.BYTES_PER_ELEMENT;case ComponentDatatype.DOUBLE:return Float64Array.BYTES_PER_ELEMENT;default:throw new DeveloperError("componentDatatype is not a valid value.")}},fromTypedArray:function(e){return e instanceof Int8Array?ComponentDatatype.BYTE:e instanceof Uint8Array?ComponentDatatype.UNSIGNED_BYTE:e instanceof Int16Array?ComponentDatatype.SHORT:e instanceof Uint16Array?ComponentDatatype.UNSIGNED_SHORT:e instanceof Int32Array?ComponentDatatype.INT:e instanceof Uint32Array?ComponentDatatype.UNSIGNED_INT:e instanceof Float32Array?ComponentDatatype.FLOAT:e instanceof Float64Array?ComponentDatatype.DOUBLE:void 0},validate:function(e){return defined(e)&&(e===ComponentDatatype.BYTE||e===ComponentDatatype.UNSIGNED_BYTE||e===ComponentDatatype.SHORT||e===ComponentDatatype.UNSIGNED_SHORT||e===ComponentDatatype.INT||e===ComponentDatatype.UNSIGNED_INT||e===ComponentDatatype.FLOAT||e===ComponentDatatype.DOUBLE)},createTypedArray:function(e,t){if(!defined(e))throw new DeveloperError("componentDatatype is required.");if(!defined(t))throw new DeveloperError("valuesOrLength is required.");switch(e){case ComponentDatatype.BYTE:return new Int8Array(t);case ComponentDatatype.UNSIGNED_BYTE:return new Uint8Array(t);case ComponentDatatype.SHORT:return new Int16Array(t);case ComponentDatatype.UNSIGNED_SHORT:return new Uint16Array(t);case ComponentDatatype.INT:return new Int32Array(t);case ComponentDatatype.UNSIGNED_INT:return new Uint32Array(t);case ComponentDatatype.FLOAT:return new Float32Array(t);case ComponentDatatype.DOUBLE:return new Float64Array(t);default:throw new DeveloperError("componentDatatype is not a valid value.")}},createArrayBufferView:function(e,t,n,a){if(!defined(e))throw new DeveloperError("componentDatatype is required.");if(!defined(t))throw new DeveloperError("buffer is required.");switch(n=defaultValue(n,0),a=defaultValue(a,(t.byteLength-n)/ComponentDatatype.getSizeInBytes(e)),e){case ComponentDatatype.BYTE:return new Int8Array(t,n,a);case ComponentDatatype.UNSIGNED_BYTE:return new Uint8Array(t,n,a);case ComponentDatatype.SHORT:return new Int16Array(t,n,a);case ComponentDatatype.UNSIGNED_SHORT:return new Uint16Array(t,n,a);case ComponentDatatype.INT:return new Int32Array(t,n,a);case ComponentDatatype.UNSIGNED_INT:return new Uint32Array(t,n,a);case ComponentDatatype.FLOAT:return new Float32Array(t,n,a);case ComponentDatatype.DOUBLE:return new Float64Array(t,n,a);default:throw new DeveloperError("componentDatatype is not a valid value.")}},fromName:function(e){switch(e){case"BYTE":return ComponentDatatype.BYTE;case"UNSIGNED_BYTE":return ComponentDatatype.UNSIGNED_BYTE;case"SHORT":return ComponentDatatype.SHORT;case"UNSIGNED_SHORT":return ComponentDatatype.UNSIGNED_SHORT;case"INT":return ComponentDatatype.INT;case"UNSIGNED_INT":return ComponentDatatype.UNSIGNED_INT;case"FLOAT":return ComponentDatatype.FLOAT;case"DOUBLE":return ComponentDatatype.DOUBLE;default:throw new DeveloperError("name is not a valid value.")}}};export default Object.freeze(ComponentDatatype);