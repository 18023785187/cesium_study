import arrayFill from"./arrayFill.js";import BoundingSphere from"./BoundingSphere.js";import Cartesian3 from"./Cartesian3.js";import ComponentDatatype from"./ComponentDatatype.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import EllipseGeometryLibrary from"./EllipseGeometryLibrary.js";import Ellipsoid from"./Ellipsoid.js";import Geometry from"./Geometry.js";import GeometryAttribute from"./GeometryAttribute.js";import GeometryAttributes from"./GeometryAttributes.js";import GeometryOffsetAttribute from"./GeometryOffsetAttribute.js";import IndexDatatype from"./IndexDatatype.js";import CesiumMath from"./Math.js";import PrimitiveType from"./PrimitiveType.js";var scratchCartesian1=new Cartesian3,boundingSphereCenter=new Cartesian3;function computeEllipse(e){var t=e.center;boundingSphereCenter=Cartesian3.multiplyByScalar(e.ellipsoid.geodeticSurfaceNormal(t,boundingSphereCenter),e.height,boundingSphereCenter),boundingSphereCenter=Cartesian3.add(t,boundingSphereCenter,boundingSphereCenter);for(var r=new BoundingSphere(boundingSphereCenter,e.semiMajorAxis),i=EllipseGeometryLibrary.computeEllipsePositions(e,!1,!0).outerPositions,o=new GeometryAttributes({position:new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:EllipseGeometryLibrary.raisePositionsToHeight(i,e,!1)})}),n=i.length/3,a=IndexDatatype.createTypedArray(n,2*n),s=0,l=0;l<n;++l)a[s++]=l,a[s++]=(l+1)%n;return{boundingSphere:r,attributes:o,indices:a}}var topBoundingSphere=new BoundingSphere,bottomBoundingSphere=new BoundingSphere;function computeExtrudedEllipse(e){var t=e.center,r=e.ellipsoid,i=e.semiMajorAxis,o=Cartesian3.multiplyByScalar(r.geodeticSurfaceNormal(t,scratchCartesian1),e.height,scratchCartesian1);topBoundingSphere.center=Cartesian3.add(t,o,topBoundingSphere.center),topBoundingSphere.radius=i,o=Cartesian3.multiplyByScalar(r.geodeticSurfaceNormal(t,o),e.extrudedHeight,o),bottomBoundingSphere.center=Cartesian3.add(t,o,bottomBoundingSphere.center),bottomBoundingSphere.radius=i;var n=EllipseGeometryLibrary.computeEllipsePositions(e,!1,!0).outerPositions,a=new GeometryAttributes({position:new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:EllipseGeometryLibrary.raisePositionsToHeight(n,e,!0)})});n=a.position.values;var s=BoundingSphere.union(topBoundingSphere,bottomBoundingSphere),l=n.length/3;if(defined(e.offsetAttribute)){var u=new Uint8Array(l);if(e.offsetAttribute===GeometryOffsetAttribute.TOP)u=arrayFill(u,1,0,l/2);else{var p=e.offsetAttribute===GeometryOffsetAttribute.NONE?0:1;u=arrayFill(u,p)}a.applyOffset=new GeometryAttribute({componentDatatype:ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:u})}var d=defaultValue(e.numberOfVerticalLines,16);d=CesiumMath.clamp(d,0,l/2);var m=IndexDatatype.createTypedArray(l,2*l+2*d);l/=2;var c,f,h=0;for(c=0;c<l;++c)m[h++]=c,m[h++]=(c+1)%l,m[h++]=c+l,m[h++]=(c+1)%l+l;if(d>0){var y=Math.min(d,l);f=Math.round(l/y);var b=Math.min(f*d,l);for(c=0;c<b;c+=f)m[h++]=c,m[h++]=c+l}return{boundingSphere:s,attributes:a,indices:m}}function EllipseOutlineGeometry(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).center,r=defaultValue(e.ellipsoid,Ellipsoid.WGS84),i=e.semiMajorAxis,o=e.semiMinorAxis,n=defaultValue(e.granularity,CesiumMath.RADIANS_PER_DEGREE);if(!defined(t))throw new DeveloperError("center is required.");if(!defined(i))throw new DeveloperError("semiMajorAxis is required.");if(!defined(o))throw new DeveloperError("semiMinorAxis is required.");if(i<o)throw new DeveloperError("semiMajorAxis must be greater than or equal to the semiMinorAxis.");if(n<=0)throw new DeveloperError("granularity must be greater than zero.");var a=defaultValue(e.height,0),s=defaultValue(e.extrudedHeight,a);this._center=Cartesian3.clone(t),this._semiMajorAxis=i,this._semiMinorAxis=o,this._ellipsoid=Ellipsoid.clone(r),this._rotation=defaultValue(e.rotation,0),this._height=Math.max(s,a),this._granularity=n,this._extrudedHeight=Math.min(s,a),this._numberOfVerticalLines=Math.max(defaultValue(e.numberOfVerticalLines,16),0),this._offsetAttribute=e.offsetAttribute,this._workerName="createEllipseOutlineGeometry"}EllipseOutlineGeometry.packedLength=Cartesian3.packedLength+Ellipsoid.packedLength+8,EllipseOutlineGeometry.pack=function(e,t,r){if(!defined(e))throw new DeveloperError("value is required");if(!defined(t))throw new DeveloperError("array is required");return r=defaultValue(r,0),Cartesian3.pack(e._center,t,r),r+=Cartesian3.packedLength,Ellipsoid.pack(e._ellipsoid,t,r),r+=Ellipsoid.packedLength,t[r++]=e._semiMajorAxis,t[r++]=e._semiMinorAxis,t[r++]=e._rotation,t[r++]=e._height,t[r++]=e._granularity,t[r++]=e._extrudedHeight,t[r++]=e._numberOfVerticalLines,t[r]=defaultValue(e._offsetAttribute,-1),t};var scratchCenter=new Cartesian3,scratchEllipsoid=new Ellipsoid,scratchOptions={center:scratchCenter,ellipsoid:scratchEllipsoid,semiMajorAxis:void 0,semiMinorAxis:void 0,rotation:void 0,height:void 0,granularity:void 0,extrudedHeight:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};EllipseOutlineGeometry.unpack=function(e,t,r){if(!defined(e))throw new DeveloperError("array is required");t=defaultValue(t,0);var i=Cartesian3.unpack(e,t,scratchCenter);t+=Cartesian3.packedLength;var o=Ellipsoid.unpack(e,t,scratchEllipsoid);t+=Ellipsoid.packedLength;var n=e[t++],a=e[t++],s=e[t++],l=e[t++],u=e[t++],p=e[t++],d=e[t++],m=e[t];return defined(r)?(r._center=Cartesian3.clone(i,r._center),r._ellipsoid=Ellipsoid.clone(o,r._ellipsoid),r._semiMajorAxis=n,r._semiMinorAxis=a,r._rotation=s,r._height=l,r._granularity=u,r._extrudedHeight=p,r._numberOfVerticalLines=d,r._offsetAttribute=-1===m?void 0:m,r):(scratchOptions.height=l,scratchOptions.extrudedHeight=p,scratchOptions.granularity=u,scratchOptions.rotation=s,scratchOptions.semiMajorAxis=n,scratchOptions.semiMinorAxis=a,scratchOptions.numberOfVerticalLines=d,scratchOptions.offsetAttribute=-1===m?void 0:m,new EllipseOutlineGeometry(scratchOptions))},EllipseOutlineGeometry.createGeometry=function(e){if(!(e._semiMajorAxis<=0||e._semiMinorAxis<=0)){var t=e._height,r=e._extrudedHeight,i=!CesiumMath.equalsEpsilon(t,r,0,CesiumMath.EPSILON2);e._center=e._ellipsoid.scaleToGeodeticSurface(e._center,e._center);var o,n={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:t,granularity:e._granularity,numberOfVerticalLines:e._numberOfVerticalLines};if(i)n.extrudedHeight=r,n.offsetAttribute=e._offsetAttribute,o=computeExtrudedEllipse(n);else if(o=computeEllipse(n),defined(e._offsetAttribute)){var a=o.attributes.position.values.length,s=new Uint8Array(a/3),l=e._offsetAttribute===GeometryOffsetAttribute.NONE?0:1;arrayFill(s,l),o.attributes.applyOffset=new GeometryAttribute({componentDatatype:ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:s})}return new Geometry({attributes:o.attributes,indices:o.indices,primitiveType:PrimitiveType.LINES,boundingSphere:o.boundingSphere,offsetAttribute:e._offsetAttribute})}};export default EllipseOutlineGeometry;