import arrayFill from"./arrayFill.js";import arrayRemoveDuplicates from"./arrayRemoveDuplicates.js";import BoundingSphere from"./BoundingSphere.js";import Cartesian3 from"./Cartesian3.js";import Check from"./Check.js";import ComponentDatatype from"./ComponentDatatype.js";import CornerType from"./CornerType.js";import CorridorGeometryLibrary from"./CorridorGeometryLibrary.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import Ellipsoid from"./Ellipsoid.js";import Geometry from"./Geometry.js";import GeometryAttribute from"./GeometryAttribute.js";import GeometryAttributes from"./GeometryAttributes.js";import GeometryOffsetAttribute from"./GeometryOffsetAttribute.js";import IndexDatatype from"./IndexDatatype.js";import CesiumMath from"./Math.js";import PolygonPipeline from"./PolygonPipeline.js";import PrimitiveType from"./PrimitiveType.js";var cartesian1=new Cartesian3,cartesian2=new Cartesian3,cartesian3=new Cartesian3;function scaleToSurface(e,t){for(var r=0;r<e.length;r++)e[r]=t.scaleToGeodeticSurface(e[r],e[r]);return e}function combine(e,t){var r,i,o,a=[],s=e.positions,n=e.corners,l=e.endPositions,p=new GeometryAttributes,u=0,d=0,f=0;for(i=0;i<s.length;i+=2)u+=o=s[i].length-3,f+=o/3*4,d+=s[i+1].length-3;for(u+=3,d+=3,i=0;i<n.length;i++){r=n[i];var h=n[i].leftPositions;defined(h)?(u+=o=h.length,f+=o/3*2):(d+=o=n[i].rightPositions.length,f+=o/3*2)}var y,c=defined(l);c&&(u+=y=l[0].length-3,d+=y,f+=4*(y/=3));var m,g,b,v,C,A,E=u+d,_=new Float64Array(E),G=0,O=E-1,T=y/2,P=IndexDatatype.createTypedArray(E/3,f+4),w=0;if(P[w++]=G/3,P[w++]=(O-2)/3,c){a.push(G/3),A=cartesian1,C=cartesian2;var D=l[0];for(i=0;i<T;i++)A=Cartesian3.fromArray(D,3*(T-1-i),A),C=Cartesian3.fromArray(D,3*(T+i),C),CorridorGeometryLibrary.addAttribute(_,C,G),CorridorGeometryLibrary.addAttribute(_,A,void 0,O),v=1+(g=G/3),b=(m=(O-2)/3)-1,P[w++]=m,P[w++]=b,P[w++]=g,P[w++]=v,G+=3,O-=3}var j=0,L=s[j++],k=s[j++];for(_.set(L,G),_.set(k,O-k.length+1),o=k.length-3,a.push(G/3,(O-2)/3),i=0;i<o;i+=3)v=1+(g=G/3),b=(m=(O-2)/3)-1,P[w++]=m,P[w++]=b,P[w++]=g,P[w++]=v,G+=3,O-=3;for(i=0;i<n.length;i++){var x,V,N=(r=n[i]).leftPositions,S=r.rightPositions,H=cartesian3;if(defined(N)){for(O-=3,V=b,a.push(v),x=0;x<N.length/3;x++)H=Cartesian3.fromArray(N,3*x,H),P[w++]=V-x-1,P[w++]=V-x,CorridorGeometryLibrary.addAttribute(_,H,void 0,O),O-=3;a.push(V-Math.floor(N.length/6)),t===CornerType.BEVELED&&a.push((O-2)/3+1),G+=3}else{for(G+=3,V=v,a.push(b),x=0;x<S.length/3;x++)H=Cartesian3.fromArray(S,3*x,H),P[w++]=V+x,P[w++]=V+x+1,CorridorGeometryLibrary.addAttribute(_,H,G),G+=3;a.push(V+Math.floor(S.length/6)),t===CornerType.BEVELED&&a.push(G/3-1),O-=3}for(L=s[j++],k=s[j++],L.splice(0,3),k.splice(k.length-3,3),_.set(L,G),_.set(k,O-k.length+1),o=k.length-3,x=0;x<k.length;x+=3)g=(v=G/3)-1,m=1+(b=(O-2)/3),P[w++]=m,P[w++]=b,P[w++]=g,P[w++]=v,G+=3,O-=3;G-=3,O+=3,a.push(G/3,(O-2)/3)}if(c){G+=3,O-=3,A=cartesian1,C=cartesian2;var I=l[1];for(i=0;i<T;i++)A=Cartesian3.fromArray(I,3*(y-i-1),A),C=Cartesian3.fromArray(I,3*i,C),CorridorGeometryLibrary.addAttribute(_,A,void 0,O),CorridorGeometryLibrary.addAttribute(_,C,G),g=(v=G/3)-1,m=1+(b=(O-2)/3),P[w++]=m,P[w++]=b,P[w++]=g,P[w++]=v,G+=3,O-=3;a.push(G/3)}else a.push(G/3,(O-2)/3);return P[w++]=G/3,P[w++]=(O-2)/3,p.position=new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:_}),{attributes:p,indices:P,wallIndices:a}}function computePositionsExtruded(e){var t=e.ellipsoid,r=combine(CorridorGeometryLibrary.computePositions(e),e.cornerType),i=r.wallIndices,o=e.height,a=e.extrudedHeight,s=r.attributes,n=r.indices,l=s.position.values,p=l.length,u=new Float64Array(p);u.set(l);var d,f=new Float64Array(2*p);if(l=PolygonPipeline.scaleToGeodeticHeight(l,o,t),u=PolygonPipeline.scaleToGeodeticHeight(u,a,t),f.set(l),f.set(u,p),s.position.values=f,p/=3,defined(e.offsetAttribute)){var h=new Uint8Array(2*p);if(e.offsetAttribute===GeometryOffsetAttribute.TOP)h=arrayFill(h,1,0,p);else{var y=e.offsetAttribute===GeometryOffsetAttribute.NONE?0:1;h=arrayFill(h,y)}s.applyOffset=new GeometryAttribute({componentDatatype:ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:h})}var c=n.length,m=IndexDatatype.createTypedArray(f.length/3,2*(c+i.length));m.set(n);var g,b,v=c;for(d=0;d<c;d+=2){var C=n[d],A=n[d+1];m[v++]=C+p,m[v++]=A+p}for(d=0;d<i.length;d++)b=(g=i[d])+p,m[v++]=g,m[v++]=b;return{attributes:s,indices:m}}function CorridorOutlineGeometry(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).positions,r=e.width;Check.typeOf.object("options.positions",t),Check.typeOf.number("options.width",r);var i=defaultValue(e.height,0),o=defaultValue(e.extrudedHeight,i);this._positions=t,this._ellipsoid=Ellipsoid.clone(defaultValue(e.ellipsoid,Ellipsoid.WGS84)),this._width=r,this._height=Math.max(i,o),this._extrudedHeight=Math.min(i,o),this._cornerType=defaultValue(e.cornerType,CornerType.ROUNDED),this._granularity=defaultValue(e.granularity,CesiumMath.RADIANS_PER_DEGREE),this._offsetAttribute=e.offsetAttribute,this._workerName="createCorridorOutlineGeometry",this.packedLength=1+t.length*Cartesian3.packedLength+Ellipsoid.packedLength+6}CorridorOutlineGeometry.pack=function(e,t,r){Check.typeOf.object("value",e),Check.typeOf.object("array",t),r=defaultValue(r,0);var i=e._positions,o=i.length;t[r++]=o;for(var a=0;a<o;++a,r+=Cartesian3.packedLength)Cartesian3.pack(i[a],t,r);return Ellipsoid.pack(e._ellipsoid,t,r),r+=Ellipsoid.packedLength,t[r++]=e._width,t[r++]=e._height,t[r++]=e._extrudedHeight,t[r++]=e._cornerType,t[r++]=e._granularity,t[r]=defaultValue(e._offsetAttribute,-1),t};var scratchEllipsoid=Ellipsoid.clone(Ellipsoid.UNIT_SPHERE),scratchOptions={positions:void 0,ellipsoid:scratchEllipsoid,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,offsetAttribute:void 0};CorridorOutlineGeometry.unpack=function(e,t,r){Check.typeOf.object("array",e),t=defaultValue(t,0);for(var i=e[t++],o=new Array(i),a=0;a<i;++a,t+=Cartesian3.packedLength)o[a]=Cartesian3.unpack(e,t);var s=Ellipsoid.unpack(e,t,scratchEllipsoid);t+=Ellipsoid.packedLength;var n=e[t++],l=e[t++],p=e[t++],u=e[t++],d=e[t++],f=e[t];return defined(r)?(r._positions=o,r._ellipsoid=Ellipsoid.clone(s,r._ellipsoid),r._width=n,r._height=l,r._extrudedHeight=p,r._cornerType=u,r._granularity=d,r._offsetAttribute=-1===f?void 0:f,r):(scratchOptions.positions=o,scratchOptions.width=n,scratchOptions.height=l,scratchOptions.extrudedHeight=p,scratchOptions.cornerType=u,scratchOptions.granularity=d,scratchOptions.offsetAttribute=-1===f?void 0:f,new CorridorOutlineGeometry(scratchOptions))},CorridorOutlineGeometry.createGeometry=function(e){var t=e._positions,r=e._width,i=e._ellipsoid;t=scaleToSurface(t,i);var o=arrayRemoveDuplicates(t,Cartesian3.equalsEpsilon);if(!(o.length<2||r<=0)){var a,s=e._height,n=e._extrudedHeight,l=!CesiumMath.equalsEpsilon(s,n,0,CesiumMath.EPSILON2),p={ellipsoid:i,positions:o,width:r,cornerType:e._cornerType,granularity:e._granularity,saveAttributes:!1};if(l)p.height=s,p.extrudedHeight=n,p.offsetAttribute=e._offsetAttribute,a=computePositionsExtruded(p);else if((a=combine(CorridorGeometryLibrary.computePositions(p),p.cornerType)).attributes.position.values=PolygonPipeline.scaleToGeodeticHeight(a.attributes.position.values,s,i),defined(e._offsetAttribute)){var u=a.attributes.position.values.length,d=new Uint8Array(u/3),f=e._offsetAttribute===GeometryOffsetAttribute.NONE?0:1;arrayFill(d,f),a.attributes.applyOffset=new GeometryAttribute({componentDatatype:ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:d})}var h=a.attributes,y=BoundingSphere.fromVertices(h.position.values,void 0,3);return new Geometry({attributes:h,indices:a.indices,primitiveType:PrimitiveType.LINES,boundingSphere:y,offsetAttribute:e._offsetAttribute})}};export default CorridorOutlineGeometry;