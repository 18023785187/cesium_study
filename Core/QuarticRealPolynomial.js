import CubicRealPolynomial from"./CubicRealPolynomial.js";import DeveloperError from"./DeveloperError.js";import CesiumMath from"./Math.js";import QuadraticRealPolynomial from"./QuadraticRealPolynomial.js";var QuarticRealPolynomial={};function original(e,r,a,o){var t=e*e,i=r-3*t/8,n=a-r*e/2+t*e/8,u=o-a*e/4+r*t/16-3*t*t/256,l=CubicRealPolynomial.computeRealRoots(1,2*i,i*i-4*u,-n*n);if(l.length>0){var m=-e/4,s=l[l.length-1];if(Math.abs(s)<CesiumMath.EPSILON14){var c=QuadraticRealPolynomial.computeRealRoots(1,i,u);if(2===c.length){var f,h=c[0],p=c[1];if(h>=0&&p>=0){var R=Math.sqrt(h),b=Math.sqrt(p);return[m-b,m-R,m+R,m+b]}if(h>=0&&p<0)return[m-(f=Math.sqrt(h)),m+f];if(h<0&&p>=0)return[m-(f=Math.sqrt(p)),m+f]}return[]}if(s>0){var v=Math.sqrt(s),y=(i+s-n/v)/2,d=(i+s+n/v)/2,w=QuadraticRealPolynomial.computeRealRoots(1,v,y),M=QuadraticRealPolynomial.computeRealRoots(1,-v,d);return 0!==w.length?(w[0]+=m,w[1]+=m,0!==M.length?(M[0]+=m,M[1]+=m,w[1]<=M[0]?[w[0],w[1],M[0],M[1]]:M[1]<=w[0]?[M[0],M[1],w[0],w[1]]:w[0]>=M[0]&&w[1]<=M[1]?[M[0],w[0],w[1],M[1]]:M[0]>=w[0]&&M[1]<=w[1]?[w[0],M[0],M[1],w[1]]:w[0]>M[0]&&w[0]<M[1]?[M[0],w[0],M[1],w[1]]:[w[0],M[0],w[1],M[1]]):w):0!==M.length?(M[0]+=m,M[1]+=m,M):[]}}return[]}function neumark(e,r,a,o){var t=e*e,i=-2*r,n=a*e+r*r-4*o,u=t*o-a*r*e+a*a,l=CubicRealPolynomial.computeRealRoots(1,i,n,u);if(l.length>0){var m,s,c,f,h,p,R=l[0],b=r-R,v=b*b,y=e/2,d=b/2,w=v-4*o,M=v+4*Math.abs(o),P=t-4*R,q=t+4*Math.abs(R);if(R<0||w*q<P*M){var g=Math.sqrt(P);m=g/2,s=0===g?0:(e*d-a)/g}else{var E=Math.sqrt(w);m=0===E?0:(e*d-a)/E,s=E/2}0===y&&0===m?(c=0,f=0):CesiumMath.sign(y)===CesiumMath.sign(m)?f=R/(c=y+m):c=R/(f=y-m),0===d&&0===s?(h=0,p=0):CesiumMath.sign(d)===CesiumMath.sign(s)?p=o/(h=d+s):h=o/(p=d-s);var D=QuadraticRealPolynomial.computeRealRoots(1,c,h),C=QuadraticRealPolynomial.computeRealRoots(1,f,p);if(0!==D.length)return 0!==C.length?D[1]<=C[0]?[D[0],D[1],C[0],C[1]]:C[1]<=D[0]?[C[0],C[1],D[0],D[1]]:D[0]>=C[0]&&D[1]<=C[1]?[C[0],D[0],D[1],C[1]]:C[0]>=D[0]&&C[1]<=D[1]?[D[0],C[0],C[1],D[1]]:D[0]>C[0]&&D[0]<C[1]?[C[0],D[0],C[1],D[1]]:[D[0],C[0],D[1],C[1]]:D;if(0!==C.length)return C}return[]}QuarticRealPolynomial.computeDiscriminant=function(e,r,a,o,t){if("number"!=typeof e)throw new DeveloperError("a is a required number.");if("number"!=typeof r)throw new DeveloperError("b is a required number.");if("number"!=typeof a)throw new DeveloperError("c is a required number.");if("number"!=typeof o)throw new DeveloperError("d is a required number.");if("number"!=typeof t)throw new DeveloperError("e is a required number.");var i=e*e,n=r*r,u=n*r,l=a*a,m=l*a,s=o*o,c=s*o,f=t*t;return n*l*s-4*u*c-4*e*m*s+18*e*r*a*c-27*i*s*s+i*e*256*(f*t)+t*(18*u*a*o-4*n*m+16*e*l*l-80*e*r*l*o-6*e*n*s+144*i*a*s)+f*(144*e*n*a-27*n*n-128*i*l-192*i*r*o)},QuarticRealPolynomial.computeRealRoots=function(e,r,a,o,t){if("number"!=typeof e)throw new DeveloperError("a is a required number.");if("number"!=typeof r)throw new DeveloperError("b is a required number.");if("number"!=typeof a)throw new DeveloperError("c is a required number.");if("number"!=typeof o)throw new DeveloperError("d is a required number.");if("number"!=typeof t)throw new DeveloperError("e is a required number.");if(Math.abs(e)<CesiumMath.EPSILON15)return CubicRealPolynomial.computeRealRoots(r,a,o,t);var i=r/e,n=a/e,u=o/e,l=t/e,m=i<0?1:0;switch(m+=n<0?m+1:m,m+=u<0?m+1:m,m+=l<0?m+1:m){case 0:case 3:case 4:case 6:case 7:case 9:case 10:case 12:case 13:case 14:case 15:return original(i,n,u,l);case 1:case 2:case 5:case 8:case 11:return neumark(i,n,u,l);default:return}};export default QuarticRealPolynomial;