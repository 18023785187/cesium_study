import when from"../ThirdParty/when.js";import binarySearch from"./binarySearch.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import EarthOrientationParametersSample from"./EarthOrientationParametersSample.js";import JulianDate from"./JulianDate.js";import LeapSecond from"./LeapSecond.js";import Resource from"./Resource.js";import RuntimeError from"./RuntimeError.js";import TimeConstants from"./TimeConstants.js";import TimeStandard from"./TimeStandard.js";function EarthOrientationParameters(e){if(e=defaultValue(e,defaultValue.EMPTY_OBJECT),this._dates=void 0,this._samples=void 0,this._dateColumn=-1,this._xPoleWanderRadiansColumn=-1,this._yPoleWanderRadiansColumn=-1,this._ut1MinusUtcSecondsColumn=-1,this._xCelestialPoleOffsetRadiansColumn=-1,this._yCelestialPoleOffsetRadiansColumn=-1,this._taiMinusUtcSecondsColumn=-1,this._columnCount=0,this._lastIndex=-1,this._downloadPromise=void 0,this._dataError=void 0,this._addNewLeapSeconds=defaultValue(e.addNewLeapSeconds,!0),defined(e.data))onDataReady(this,e.data);else if(defined(e.url)){var a=Resource.createIfNeeded(e.url),n=this;this._downloadPromise=a.fetchJson().then((function(e){onDataReady(n,e)})).otherwise((function(){n._dataError="An error occurred while retrieving the EOP data from the URL "+a.url+"."}))}else onDataReady(this,{columnNames:["dateIso8601","modifiedJulianDateUtc","xPoleWanderRadians","yPoleWanderRadians","ut1MinusUtcSeconds","lengthOfDayCorrectionSeconds","xCelestialPoleOffsetRadians","yCelestialPoleOffsetRadians","taiMinusUtcSeconds"],samples:[]})}function compareLeapSecondDates(e,a){return JulianDate.compare(e.julianDate,a)}function onDataReady(e,a){if(defined(a.columnNames))if(defined(a.samples)){var n=a.columnNames.indexOf("modifiedJulianDateUtc"),t=a.columnNames.indexOf("xPoleWanderRadians"),i=a.columnNames.indexOf("yPoleWanderRadians"),o=a.columnNames.indexOf("ut1MinusUtcSeconds"),s=a.columnNames.indexOf("xCelestialPoleOffsetRadians"),r=a.columnNames.indexOf("yCelestialPoleOffsetRadians"),l=a.columnNames.indexOf("taiMinusUtcSeconds");if(n<0||t<0||i<0||o<0||s<0||r<0||l<0)e._dataError="Error in loaded EOP data: The columnNames property must include modifiedJulianDateUtc, xPoleWanderRadians, yPoleWanderRadians, ut1MinusUtcSeconds, xCelestialPoleOffsetRadians, yCelestialPoleOffsetRadians, and taiMinusUtcSeconds columns";else{var d,u=e._samples=a.samples,f=e._dates=[];e._dateColumn=n,e._xPoleWanderRadiansColumn=t,e._yPoleWanderRadiansColumn=i,e._ut1MinusUtcSecondsColumn=o,e._xCelestialPoleOffsetRadiansColumn=s,e._yCelestialPoleOffsetRadiansColumn=r,e._taiMinusUtcSecondsColumn=l,e._columnCount=a.columnNames.length,e._lastIndex=void 0;for(var m=e._addNewLeapSeconds,c=0,P=u.length;c<P;c+=e._columnCount){var h=u[c+n],_=u[c+l],p=h+TimeConstants.MODIFIED_JULIAN_DATE_DIFFERENCE,C=new JulianDate(p,_,TimeStandard.TAI);if(f.push(C),m){if(_!==d&&defined(d)){var O=JulianDate.leapSeconds,R=binarySearch(O,C,compareLeapSecondDates);if(R<0){var x=new LeapSecond(C,_);O.splice(~R,0,x)}}d=_}}}}else e._dataError="Error in loaded EOP data: The samples property is required.";else e._dataError="Error in loaded EOP data: The columnNames property is required."}function fillResultFromIndex(e,a,n,t,i){var o=n*t;i.xPoleWander=a[o+e._xPoleWanderRadiansColumn],i.yPoleWander=a[o+e._yPoleWanderRadiansColumn],i.xPoleOffset=a[o+e._xCelestialPoleOffsetRadiansColumn],i.yPoleOffset=a[o+e._yCelestialPoleOffsetRadiansColumn],i.ut1MinusUtc=a[o+e._ut1MinusUtcSecondsColumn]}function linearInterp(e,a,n){return a+e*(n-a)}function interpolate(e,a,n,t,i,o,s){var r=e._columnCount;if(o>a.length-1)return s.xPoleWander=0,s.yPoleWander=0,s.xPoleOffset=0,s.yPoleOffset=0,s.ut1MinusUtc=0,s;var l=a[i],d=a[o];if(l.equals(d)||t.equals(l))return fillResultFromIndex(e,n,i,r,s),s;if(t.equals(d))return fillResultFromIndex(e,n,o,r,s),s;var u=JulianDate.secondsDifference(t,l)/JulianDate.secondsDifference(d,l),f=i*r,m=o*r,c=n[f+e._ut1MinusUtcSecondsColumn],P=n[m+e._ut1MinusUtcSecondsColumn],h=P-c;if(h>.5||h<-.5){var _=n[f+e._taiMinusUtcSecondsColumn],p=n[m+e._taiMinusUtcSecondsColumn];_!==p&&(d.equals(t)?c=P:P-=p-_)}return s.xPoleWander=linearInterp(u,n[f+e._xPoleWanderRadiansColumn],n[m+e._xPoleWanderRadiansColumn]),s.yPoleWander=linearInterp(u,n[f+e._yPoleWanderRadiansColumn],n[m+e._yPoleWanderRadiansColumn]),s.xPoleOffset=linearInterp(u,n[f+e._xCelestialPoleOffsetRadiansColumn],n[m+e._xCelestialPoleOffsetRadiansColumn]),s.yPoleOffset=linearInterp(u,n[f+e._yCelestialPoleOffsetRadiansColumn],n[m+e._yCelestialPoleOffsetRadiansColumn]),s.ut1MinusUtc=linearInterp(u,c,P),s}EarthOrientationParameters.NONE=Object.freeze({getPromiseToLoad:function(){return when.resolve()},compute:function(e,a){return defined(a)?(a.xPoleWander=0,a.yPoleWander=0,a.xPoleOffset=0,a.yPoleOffset=0,a.ut1MinusUtc=0):a=new EarthOrientationParametersSample(0,0,0,0,0),a}}),EarthOrientationParameters.prototype.getPromiseToLoad=function(){return when(this._downloadPromise)},EarthOrientationParameters.prototype.compute=function(e,a){if(defined(this._samples)){if(defined(a)||(a=new EarthOrientationParametersSample(0,0,0,0,0)),0===this._samples.length)return a.xPoleWander=0,a.yPoleWander=0,a.xPoleOffset=0,a.yPoleOffset=0,a.ut1MinusUtc=0,a;var n=this._dates,t=this._lastIndex,i=0,o=0;if(defined(t)){var s=n[t],r=n[t+1],l=JulianDate.lessThanOrEquals(s,e),d=!defined(r),u=d||JulianDate.greaterThanOrEquals(r,e);if(l&&u)return i=t,!d&&r.equals(e)&&++i,o=i+1,interpolate(this,n,this._samples,e,i,o,a),a}var f=binarySearch(n,e,JulianDate.compare,this._dateColumn);return f>=0?(f<n.length-1&&n[f+1].equals(e)&&++f,i=f,o=f):(i=(o=~f)-1)<0&&(i=0),this._lastIndex=i,interpolate(this,n,this._samples,e,i,o,a),a}if(defined(this._dataError))throw new RuntimeError(this._dataError)};export default EarthOrientationParameters;