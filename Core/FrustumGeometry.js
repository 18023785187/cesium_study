import BoundingSphere from"./BoundingSphere.js";import Cartesian3 from"./Cartesian3.js";import Cartesian4 from"./Cartesian4.js";import Check from"./Check.js";import ComponentDatatype from"./ComponentDatatype.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import Geometry from"./Geometry.js";import GeometryAttribute from"./GeometryAttribute.js";import GeometryAttributes from"./GeometryAttributes.js";import Matrix3 from"./Matrix3.js";import Matrix4 from"./Matrix4.js";import OrthographicFrustum from"./OrthographicFrustum.js";import PerspectiveFrustum from"./PerspectiveFrustum.js";import PrimitiveType from"./PrimitiveType.js";import Quaternion from"./Quaternion.js";import VertexFormat from"./VertexFormat.js";var PERSPECTIVE=0,ORTHOGRAPHIC=1;function FrustumGeometry(t){Check.typeOf.object("options",t),Check.typeOf.object("options.frustum",t.frustum),Check.typeOf.object("options.origin",t.origin),Check.typeOf.object("options.orientation",t.orientation);var e,r,a=t.frustum,n=t.orientation,i=t.origin,o=defaultValue(t.vertexFormat,VertexFormat.DEFAULT),s=defaultValue(t._drawNearPlane,!0);a instanceof PerspectiveFrustum?(e=PERSPECTIVE,r=PerspectiveFrustum.packedLength):a instanceof OrthographicFrustum&&(e=ORTHOGRAPHIC,r=OrthographicFrustum.packedLength),this._frustumType=e,this._frustum=a.clone(),this._origin=Cartesian3.clone(i),this._orientation=Quaternion.clone(n),this._drawNearPlane=s,this._vertexFormat=o,this._workerName="createFrustumGeometry",this.packedLength=2+r+Cartesian3.packedLength+Quaternion.packedLength+VertexFormat.packedLength}FrustumGeometry.pack=function(t,e,r){Check.typeOf.object("value",t),Check.defined("array",e),r=defaultValue(r,0);var a=t._frustumType,n=t._frustum;return e[r++]=a,a===PERSPECTIVE?(PerspectiveFrustum.pack(n,e,r),r+=PerspectiveFrustum.packedLength):(OrthographicFrustum.pack(n,e,r),r+=OrthographicFrustum.packedLength),Cartesian3.pack(t._origin,e,r),r+=Cartesian3.packedLength,Quaternion.pack(t._orientation,e,r),r+=Quaternion.packedLength,VertexFormat.pack(t._vertexFormat,e,r),e[r+=VertexFormat.packedLength]=t._drawNearPlane?1:0,e};var scratchPackPerspective=new PerspectiveFrustum,scratchPackOrthographic=new OrthographicFrustum,scratchPackQuaternion=new Quaternion,scratchPackorigin=new Cartesian3,scratchVertexFormat=new VertexFormat;function getAttributes(t,e,r,a,n,i,o,s){for(var u=t/3*2,c=0;c<4;++c)defined(e)&&(e[t]=i.x,e[t+1]=i.y,e[t+2]=i.z),defined(r)&&(r[t]=o.x,r[t+1]=o.y,r[t+2]=o.z),defined(a)&&(a[t]=s.x,a[t+1]=s.y,a[t+2]=s.z),t+=3;n[u]=0,n[u+1]=0,n[u+2]=1,n[u+3]=0,n[u+4]=1,n[u+5]=1,n[u+6]=0,n[u+7]=1}FrustumGeometry.unpack=function(t,e,r){Check.defined("array",t),e=defaultValue(e,0);var a,n=t[e++];n===PERSPECTIVE?(a=PerspectiveFrustum.unpack(t,e,scratchPackPerspective),e+=PerspectiveFrustum.packedLength):(a=OrthographicFrustum.unpack(t,e,scratchPackOrthographic),e+=OrthographicFrustum.packedLength);var i=Cartesian3.unpack(t,e,scratchPackorigin);e+=Cartesian3.packedLength;var o=Quaternion.unpack(t,e,scratchPackQuaternion);e+=Quaternion.packedLength;var s=VertexFormat.unpack(t,e,scratchVertexFormat),u=1===t[e+=VertexFormat.packedLength];if(!defined(r))return new FrustumGeometry({frustum:a,origin:i,orientation:o,vertexFormat:s,_drawNearPlane:u});var c=n===r._frustumType?r._frustum:void 0;return r._frustum=a.clone(c),r._frustumType=n,r._origin=Cartesian3.clone(i,r._origin),r._orientation=Quaternion.clone(o,r._orientation),r._vertexFormat=VertexFormat.clone(s,r._vertexFormat),r._drawNearPlane=u,r};var scratchRotationMatrix=new Matrix3,scratchViewMatrix=new Matrix4,scratchInverseMatrix=new Matrix4,scratchXDirection=new Cartesian3,scratchYDirection=new Cartesian3,scratchZDirection=new Cartesian3,scratchNegativeX=new Cartesian3,scratchNegativeY=new Cartesian3,scratchNegativeZ=new Cartesian3,frustumSplits=new Array(3),frustumCornersNDC=new Array(4);frustumCornersNDC[0]=new Cartesian4(-1,-1,1,1),frustumCornersNDC[1]=new Cartesian4(1,-1,1,1),frustumCornersNDC[2]=new Cartesian4(1,1,1,1),frustumCornersNDC[3]=new Cartesian4(-1,1,1,1);for(var scratchFrustumCorners=new Array(4),i=0;i<4;++i)scratchFrustumCorners[i]=new Cartesian4;FrustumGeometry._computeNearFarPlanes=function(t,e,r,a,n,i,o,s){var u=Matrix3.fromQuaternion(e,scratchRotationMatrix),c=defaultValue(i,scratchXDirection),m=defaultValue(o,scratchYDirection),p=defaultValue(s,scratchZDirection);c=Matrix3.getColumn(u,0,c),m=Matrix3.getColumn(u,1,m),p=Matrix3.getColumn(u,2,p),Cartesian3.normalize(c,c),Cartesian3.normalize(m,m),Cartesian3.normalize(p,p),Cartesian3.negate(c,c);var f,h,d=Matrix4.computeView(t,p,m,c,scratchViewMatrix);if(r===PERSPECTIVE){var l=a.projectionMatrix,C=Matrix4.multiply(l,d,scratchInverseMatrix);h=Matrix4.inverse(C,scratchInverseMatrix)}else f=Matrix4.inverseTransformation(d,scratchInverseMatrix);defined(h)?(frustumSplits[0]=a.near,frustumSplits[1]=a.far):(frustumSplits[0]=0,frustumSplits[1]=a.near,frustumSplits[2]=a.far);for(var y=0;y<2;++y)for(var v=0;v<4;++v){var g=Cartesian4.clone(frustumCornersNDC[v],scratchFrustumCorners[v]);if(defined(h)){var F=1/(g=Matrix4.multiplyByVector(h,g,g)).w;Cartesian3.multiplyByScalar(g,F,g),Cartesian3.subtract(g,t,g),Cartesian3.normalize(g,g);var x=Cartesian3.dot(p,g);Cartesian3.multiplyByScalar(g,frustumSplits[y]/x,g),Cartesian3.add(g,t,g)}else{defined(a._offCenterFrustum)&&(a=a._offCenterFrustum);var w=frustumSplits[y],P=frustumSplits[y+1];g.x=.5*(g.x*(a.right-a.left)+a.left+a.right),g.y=.5*(g.y*(a.top-a.bottom)+a.bottom+a.top),g.z=.5*(g.z*(w-P)-w-P),g.w=1,Matrix4.multiplyByVector(f,g,g)}n[12*y+3*v]=g.x,n[12*y+3*v+1]=g.y,n[12*y+3*v+2]=g.z}},FrustumGeometry.createGeometry=function(t){var e=t._frustumType,r=t._frustum,a=t._origin,n=t._orientation,i=t._drawNearPlane,o=t._vertexFormat,s=i?6:5,u=new Float64Array(72);FrustumGeometry._computeNearFarPlanes(a,n,e,r,u);var c=24;u[c]=u[12],u[c+1]=u[13],u[c+2]=u[14],u[c+3]=u[0],u[c+4]=u[1],u[c+5]=u[2],u[c+6]=u[9],u[c+7]=u[10],u[c+8]=u[11],u[c+9]=u[21],u[c+10]=u[22],u[c+11]=u[23],u[c+=12]=u[15],u[c+1]=u[16],u[c+2]=u[17],u[c+3]=u[3],u[c+4]=u[4],u[c+5]=u[5],u[c+6]=u[0],u[c+7]=u[1],u[c+8]=u[2],u[c+9]=u[12],u[c+10]=u[13],u[c+11]=u[14],u[c+=12]=u[3],u[c+1]=u[4],u[c+2]=u[5],u[c+3]=u[15],u[c+4]=u[16],u[c+5]=u[17],u[c+6]=u[18],u[c+7]=u[19],u[c+8]=u[20],u[c+9]=u[6],u[c+10]=u[7],u[c+11]=u[8],u[c+=12]=u[6],u[c+1]=u[7],u[c+2]=u[8],u[c+3]=u[18],u[c+4]=u[19],u[c+5]=u[20],u[c+6]=u[21],u[c+7]=u[22],u[c+8]=u[23],u[c+9]=u[9],u[c+10]=u[10],u[c+11]=u[11],i||(u=u.subarray(12));var m=new GeometryAttributes({position:new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:u})});if(defined(o.normal)||defined(o.tangent)||defined(o.bitangent)||defined(o.st)){var p=defined(o.normal)?new Float32Array(12*s):void 0,f=defined(o.tangent)?new Float32Array(12*s):void 0,h=defined(o.bitangent)?new Float32Array(12*s):void 0,d=defined(o.st)?new Float32Array(8*s):void 0,l=scratchXDirection,C=scratchYDirection,y=scratchZDirection,v=Cartesian3.negate(l,scratchNegativeX),g=Cartesian3.negate(C,scratchNegativeY),F=Cartesian3.negate(y,scratchNegativeZ);c=0,i&&(getAttributes(c,p,f,h,d,F,l,C),c+=12),getAttributes(c,p,f,h,d,y,v,C),getAttributes(c+=12,p,f,h,d,v,F,C),getAttributes(c+=12,p,f,h,d,g,F,v),getAttributes(c+=12,p,f,h,d,l,y,C),getAttributes(c+=12,p,f,h,d,C,y,v),defined(p)&&(m.normal=new GeometryAttribute({componentDatatype:ComponentDatatype.FLOAT,componentsPerAttribute:3,values:p})),defined(f)&&(m.tangent=new GeometryAttribute({componentDatatype:ComponentDatatype.FLOAT,componentsPerAttribute:3,values:f})),defined(h)&&(m.bitangent=new GeometryAttribute({componentDatatype:ComponentDatatype.FLOAT,componentsPerAttribute:3,values:h})),defined(d)&&(m.st=new GeometryAttribute({componentDatatype:ComponentDatatype.FLOAT,componentsPerAttribute:2,values:d}))}for(var x=new Uint16Array(6*s),w=0;w<s;++w){var P=6*w,k=4*w;x[P]=k,x[P+1]=k+1,x[P+2]=k+2,x[P+3]=k,x[P+4]=k+2,x[P+5]=k+3}return new Geometry({attributes:m,indices:x,primitiveType:PrimitiveType.TRIANGLES,boundingSphere:BoundingSphere.fromVertices(u)})};export default FrustumGeometry;