import Cartesian3 from"./Cartesian3.js";import Cartographic from"./Cartographic.js";import Check from"./Check.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import Ellipsoid from"./Ellipsoid.js";import CesiumMath from"./Math.js";function calculateM(t,i,e){if(0===t)return i*e;var a=t*t,n=a*a,s=n*a,r=s*a,h=r*a,u=h*a,l=e;return i*((1-a/4-3*n/64-5*s/256-175*r/16384-441*h/65536-4851*u/1048576)*l-(3*a/8+3*n/32+45*s/1024+105*r/4096+2205*h/131072+6237*u/524288)*Math.sin(2*l)+(15*n/256+45*s/1024+525*r/16384+1575*h/65536+155925*u/8388608)*Math.sin(4*l)-(35*s/3072+175*r/12288+3675*h/262144+13475*u/1048576)*Math.sin(6*l)+(315*r/131072+2205*h/524288+43659*u/8388608)*Math.sin(8*l)-(693*h/1310720+6237*u/5242880)*Math.sin(10*l)+1001*u/8388608*Math.sin(12*l))}function calculateInverseM(t,i,e){var a=t/e;if(0===i)return a;var n=a*a,s=n*a,r=s*a,h=i*i,u=h*h,l=u*h,o=l*h,d=o*h,c=d*h,m=Math.sin(2*a),M=Math.cos(2*a),p=Math.sin(4*a),g=Math.cos(4*a),f=Math.sin(6*a),C=Math.cos(6*a),_=Math.sin(8*a),E=Math.cos(8*a),P=Math.sin(10*a);return a+a*h/4+7*a*u/64+15*a*l/256+579*a*o/16384+1515*a*d/65536+16837*a*c/1048576+(3*a*u/16+45*a*l/256-a*(32*n-561)*o/4096-a*(232*n-1677)*d/16384+a*(399985-90560*n+512*r)*c/5242880)*M+(21*a*l/256+483*a*o/4096-a*(224*n-1969)*d/16384-a*(33152*n-112599)*c/1048576)*g+(151*a*o/4096+4681*a*d/65536+1479*a*c/16384-453*s*c/32768)*C+(1097*a*d/65536+42783*a*c/1048576)*E+8011*a*c/1048576*Math.cos(10*a)+(3*h/8+3*u/16+213*l/2048-3*n*l/64+255*o/4096-33*n*o/512+20861*d/524288-33*n*d/512+r*d/1024+28273*c/1048576-471*n*c/8192+9*r*c/4096)*m+(21*u/256+21*l/256+533*o/8192-21*n*o/512+197*d/4096-315*n*d/4096+584039*c/16777216-12517*n*c/131072+7*r*c/2048)*p+(151*l/6144+151*o/4096+5019*d/131072-453*n*d/16384+26965*c/786432-8607*n*c/131072)*f+(1097*o/131072+1097*d/65536+225797*c/10485760-1097*n*c/65536)*_+(8011*d/2621440+8011*c/1048576)*P+293393*c/251658240*Math.sin(12*a)}function calculateSigma(t,i){if(0===t)return Math.log(Math.tan(.5*(CesiumMath.PI_OVER_TWO+i)));var e=t*Math.sin(i);return Math.log(Math.tan(.5*(CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}function calculateHeading(t,i,e,a,n){var s=calculateSigma(t._ellipticity,e),r=calculateSigma(t._ellipticity,n);return Math.atan2(CesiumMath.negativePiToPi(a-i),r-s)}function calculateArcLength(t,i,e,a,n,s,r){var h=t._heading,u=s-a,l=0;if(CesiumMath.equalsEpsilon(Math.abs(h),CesiumMath.PI_OVER_TWO,CesiumMath.EPSILON8))if(i===e)l=i*Math.cos(n)*CesiumMath.negativePiToPi(u);else{var o=Math.sin(n);l=i*Math.cos(n)*CesiumMath.negativePiToPi(u)/Math.sqrt(1-t._ellipticitySquared*o*o)}else{var d=calculateM(t._ellipticity,i,n);l=(calculateM(t._ellipticity,i,r)-d)/Math.cos(h)}return Math.abs(l)}var scratchCart1=new Cartesian3,scratchCart2=new Cartesian3;function computeProperties(t,i,e,a){var n=Cartesian3.normalize(a.cartographicToCartesian(i,scratchCart2),scratchCart1),s=Cartesian3.normalize(a.cartographicToCartesian(e,scratchCart2),scratchCart2);Check.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(Cartesian3.angleBetween(n,s))-Math.PI),.0125);var r=a.maximumRadius,h=a.minimumRadius,u=r*r,l=h*h;t._ellipticitySquared=(u-l)/u,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=Cartographic.clone(i,t._start),t._start.height=0,t._end=Cartographic.clone(e,t._end),t._end.height=0,t._heading=calculateHeading(t,i.longitude,i.latitude,e.longitude,e.latitude),t._distance=calculateArcLength(t,a.maximumRadius,a.minimumRadius,i.longitude,i.latitude,e.longitude,e.latitude)}function interpolateUsingSurfaceDistance(t,i,e,a,n,s){if(0===e)return Cartographic.clone(t,s);var r,h,u,l=n*n;if(Math.abs(CesiumMath.PI_OVER_TWO-Math.abs(i))>CesiumMath.EPSILON8){h=calculateInverseM(calculateM(n,a,t.latitude)+e*Math.cos(i),n,a);var o=calculateSigma(n,t.latitude),d=calculateSigma(n,h);u=Math.tan(i)*(d-o),r=CesiumMath.negativePiToPi(t.longitude+u)}else{var c;if(h=t.latitude,0===n)c=a*Math.cos(t.latitude);else{var m=Math.sin(t.latitude);c=a*Math.cos(t.latitude)/Math.sqrt(1-l*m*m)}u=e/c,r=i>0?CesiumMath.negativePiToPi(t.longitude+u):CesiumMath.negativePiToPi(t.longitude-u)}return defined(s)?(s.longitude=r,s.latitude=h,s.height=0,s):new Cartographic(r,h,0)}function EllipsoidRhumbLine(t,i,e){var a=defaultValue(e,Ellipsoid.WGS84);this._ellipsoid=a,this._start=new Cartographic,this._end=new Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,defined(t)&&defined(i)&&computeProperties(this,t,i,a)}Object.defineProperties(EllipsoidRhumbLine.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return Check.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return Check.defined("distance",this._distance),this._heading}}}),EllipsoidRhumbLine.fromStartHeadingDistance=function(t,i,e,a,n){Check.defined("start",t),Check.defined("heading",i),Check.defined("distance",e),Check.typeOf.number.greaterThan("distance",e,0);var s=defaultValue(a,Ellipsoid.WGS84),r=s.maximumRadius,h=s.minimumRadius,u=r*r,l=h*h,o=Math.sqrt((u-l)/u),d=interpolateUsingSurfaceDistance(t,i=CesiumMath.negativePiToPi(i),e,s.maximumRadius,o);return!defined(n)||defined(a)&&!a.equals(n.ellipsoid)?new EllipsoidRhumbLine(t,d,s):(n.setEndPoints(t,d),n)},EllipsoidRhumbLine.prototype.setEndPoints=function(t,i){Check.defined("start",t),Check.defined("end",i),computeProperties(this,t,i,this._ellipsoid)},EllipsoidRhumbLine.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},EllipsoidRhumbLine.prototype.interpolateUsingSurfaceDistance=function(t,i){if(Check.typeOf.number("distance",t),!defined(this._distance)||0===this._distance)throw new DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");return interpolateUsingSurfaceDistance(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},EllipsoidRhumbLine.prototype.findIntersectionWithLongitude=function(t,i){if(Check.typeOf.number("intersectionLongitude",t),!defined(this._distance)||0===this._distance)throw new DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var e=this._ellipticity,a=this._heading,n=Math.abs(a),s=this._start;if(t=CesiumMath.negativePiToPi(t),CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,CesiumMath.EPSILON14)&&(t=CesiumMath.sign(s.longitude)*Math.PI),defined(i)||(i=new Cartographic),Math.abs(CesiumMath.PI_OVER_TWO-n)<=CesiumMath.EPSILON8)return i.longitude=t,i.latitude=s.latitude,i.height=0,i;if(CesiumMath.equalsEpsilon(Math.abs(CesiumMath.PI_OVER_TWO-n),CesiumMath.PI_OVER_TWO,CesiumMath.EPSILON8)){if(CesiumMath.equalsEpsilon(t,s.longitude,CesiumMath.EPSILON12))return;return i.longitude=t,i.latitude=CesiumMath.PI_OVER_TWO*CesiumMath.sign(CesiumMath.PI_OVER_TWO-a),i.height=0,i}var r,h=s.latitude,u=e*Math.sin(h),l=Math.tan(.5*(CesiumMath.PI_OVER_TWO+h))*Math.exp((t-s.longitude)/Math.tan(a)),o=(1+u)/(1-u),d=s.latitude;do{r=d;var c=e*Math.sin(r),m=(1+c)/(1-c);d=2*Math.atan(l*Math.pow(m/o,e/2))-CesiumMath.PI_OVER_TWO}while(!CesiumMath.equalsEpsilon(d,r,CesiumMath.EPSILON12));return i.longitude=t,i.latitude=d,i.height=0,i},EllipsoidRhumbLine.prototype.findIntersectionWithLatitude=function(t,i){if(Check.typeOf.number("intersectionLatitude",t),!defined(this._distance)||0===this._distance)throw new DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var e=this._ellipticity,a=this._heading,n=this._start;if(!CesiumMath.equalsEpsilon(Math.abs(a),CesiumMath.PI_OVER_TWO,CesiumMath.EPSILON8)){var s=calculateSigma(e,n.latitude),r=calculateSigma(e,t),h=Math.tan(a)*(r-s),u=CesiumMath.negativePiToPi(n.longitude+h);return defined(i)?(i.longitude=u,i.latitude=t,i.height=0,i):new Cartographic(u,t,0)}};export default EllipsoidRhumbLine;