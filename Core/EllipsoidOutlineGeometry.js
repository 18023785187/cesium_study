import arrayFill from"./arrayFill.js";import BoundingSphere from"./BoundingSphere.js";import Cartesian3 from"./Cartesian3.js";import ComponentDatatype from"./ComponentDatatype.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import Ellipsoid from"./Ellipsoid.js";import Geometry from"./Geometry.js";import GeometryAttribute from"./GeometryAttribute.js";import GeometryAttributes from"./GeometryAttributes.js";import GeometryOffsetAttribute from"./GeometryOffsetAttribute.js";import IndexDatatype from"./IndexDatatype.js";import CesiumMath from"./Math.js";import PrimitiveType from"./PrimitiveType.js";var defaultRadii=new Cartesian3(1,1,1),cos=Math.cos,sin=Math.sin;function EllipsoidOutlineGeometry(t){t=defaultValue(t,defaultValue.EMPTY_OBJECT);var i=defaultValue(t.radii,defaultRadii),e=defaultValue(t.innerRadii,i),r=defaultValue(t.minimumClock,0),o=defaultValue(t.maximumClock,CesiumMath.TWO_PI),a=defaultValue(t.minimumCone,0),n=defaultValue(t.maximumCone,CesiumMath.PI),s=Math.round(defaultValue(t.stackPartitions,10)),m=Math.round(defaultValue(t.slicePartitions,8)),u=Math.round(defaultValue(t.subdivisions,128));if(s<1)throw new DeveloperError("options.stackPartitions cannot be less than 1");if(m<0)throw new DeveloperError("options.slicePartitions cannot be less than 0");if(u<0)throw new DeveloperError("options.subdivisions must be greater than or equal to zero.");if(defined(t.offsetAttribute)&&t.offsetAttribute===GeometryOffsetAttribute.TOP)throw new DeveloperError("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");this._radii=Cartesian3.clone(i),this._innerRadii=Cartesian3.clone(e),this._minimumClock=r,this._maximumClock=o,this._minimumCone=a,this._maximumCone=n,this._stackPartitions=s,this._slicePartitions=m,this._subdivisions=u,this._offsetAttribute=t.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}EllipsoidOutlineGeometry.packedLength=2*Cartesian3.packedLength+8,EllipsoidOutlineGeometry.pack=function(t,i,e){if(!defined(t))throw new DeveloperError("value is required");if(!defined(i))throw new DeveloperError("array is required");return e=defaultValue(e,0),Cartesian3.pack(t._radii,i,e),e+=Cartesian3.packedLength,Cartesian3.pack(t._innerRadii,i,e),e+=Cartesian3.packedLength,i[e++]=t._minimumClock,i[e++]=t._maximumClock,i[e++]=t._minimumCone,i[e++]=t._maximumCone,i[e++]=t._stackPartitions,i[e++]=t._slicePartitions,i[e++]=t._subdivisions,i[e]=defaultValue(t._offsetAttribute,-1),i};var scratchRadii=new Cartesian3,scratchInnerRadii=new Cartesian3,scratchOptions={radii:scratchRadii,innerRadii:scratchInnerRadii,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};EllipsoidOutlineGeometry.unpack=function(t,i,e){if(!defined(t))throw new DeveloperError("array is required");i=defaultValue(i,0);var r=Cartesian3.unpack(t,i,scratchRadii);i+=Cartesian3.packedLength;var o=Cartesian3.unpack(t,i,scratchInnerRadii);i+=Cartesian3.packedLength;var a=t[i++],n=t[i++],s=t[i++],m=t[i++],u=t[i++],f=t[i++],l=t[i++],d=t[i];return defined(e)?(e._radii=Cartesian3.clone(r,e._radii),e._innerRadii=Cartesian3.clone(o,e._innerRadii),e._minimumClock=a,e._maximumClock=n,e._minimumCone=s,e._maximumCone=m,e._stackPartitions=u,e._slicePartitions=f,e._subdivisions=l,e._offsetAttribute=-1===d?void 0:d,e):(scratchOptions.minimumClock=a,scratchOptions.maximumClock=n,scratchOptions.minimumCone=s,scratchOptions.maximumCone=m,scratchOptions.stackPartitions=u,scratchOptions.slicePartitions=f,scratchOptions.subdivisions=l,scratchOptions.offsetAttribute=-1===d?void 0:d,new EllipsoidOutlineGeometry(scratchOptions))},EllipsoidOutlineGeometry.createGeometry=function(t){var i=t._radii;if(!(i.x<=0||i.y<=0||i.z<=0)){var e=t._innerRadii;if(!(e.x<=0||e.y<=0||e.z<=0)){var r=t._minimumClock,o=t._maximumClock,a=t._minimumCone,n=t._maximumCone,s=t._subdivisions,m=Ellipsoid.fromCartesian3(i),u=t._slicePartitions+1,f=t._stackPartitions+1;(u=Math.round(u*Math.abs(o-r)/CesiumMath.TWO_PI))<2&&(u=2),(f=Math.round(f*Math.abs(n-a)/CesiumMath.PI))<2&&(f=2);var l=0,d=1,c=e.x!==i.x||e.y!==i.y||e.z!==i.z,p=!1,h=!1;c&&(d=2,a>0&&(p=!0,l+=u),n<Math.PI&&(h=!0,l+=u));var y,C,v,_,b=s*d*(f+u),k=new Float64Array(3*b),A=2*(b+l-(u+f)*d),O=IndexDatatype.createTypedArray(b,A),w=0,P=new Array(f),E=new Array(f);for(y=0;y<f;y++)_=a+y*(n-a)/(f-1),P[y]=sin(_),E[y]=cos(_);var x=new Array(s),G=new Array(s);for(y=0;y<s;y++)v=r+y*(o-r)/(s-1),x[y]=sin(v),G[y]=cos(v);for(y=0;y<f;y++)for(C=0;C<s;C++)k[w++]=i.x*P[y]*G[C],k[w++]=i.y*P[y]*x[C],k[w++]=i.z*E[y];if(c)for(y=0;y<f;y++)for(C=0;C<s;C++)k[w++]=e.x*P[y]*G[C],k[w++]=e.y*P[y]*x[C],k[w++]=e.z*E[y];for(P.length=s,E.length=s,y=0;y<s;y++)_=a+y*(n-a)/(s-1),P[y]=sin(_),E[y]=cos(_);for(x.length=u,G.length=u,y=0;y<u;y++)v=r+y*(o-r)/(u-1),x[y]=sin(v),G[y]=cos(v);for(y=0;y<s;y++)for(C=0;C<u;C++)k[w++]=i.x*P[y]*G[C],k[w++]=i.y*P[y]*x[C],k[w++]=i.z*E[y];if(c)for(y=0;y<s;y++)for(C=0;C<u;C++)k[w++]=e.x*P[y]*G[C],k[w++]=e.y*P[y]*x[C],k[w++]=e.z*E[y];for(w=0,y=0;y<f*d;y++){var D=y*s;for(C=0;C<s-1;C++)O[w++]=D+C,O[w++]=D+C+1}var g=f*s*d;for(y=0;y<u;y++)for(C=0;C<s-1;C++)O[w++]=g+y+C*u,O[w++]=g+y+(C+1)*u;if(c)for(g=f*s*d+u*s,y=0;y<u;y++)for(C=0;C<s-1;C++)O[w++]=g+y+C*u,O[w++]=g+y+(C+1)*u;if(c){var M=f*s*d,V=M+s*u;if(p)for(y=0;y<u;y++)O[w++]=M+y,O[w++]=V+y;if(h)for(M+=s*u-u,V+=s*u-u,y=0;y<u;y++)O[w++]=M+y,O[w++]=V+y}var j=new GeometryAttributes({position:new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:k})});if(defined(t._offsetAttribute)){var R=k.length,I=new Uint8Array(R/3),T=t._offsetAttribute===GeometryOffsetAttribute.NONE?0:1;arrayFill(I,T),j.applyOffset=new GeometryAttribute({componentDatatype:ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:I})}return new Geometry({attributes:j,indices:O,primitiveType:PrimitiveType.LINES,boundingSphere:BoundingSphere.fromEllipsoid(m),offsetAttribute:t._offsetAttribute})}}};export default EllipsoidOutlineGeometry;