import BoundingSphere from"./BoundingSphere.js";import Cartesian3 from"./Cartesian3.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import Ellipsoid from"./Ellipsoid.js";import CesiumMath from"./Math.js";import Rectangle from"./Rectangle.js";import Visibility from"./Visibility.js";function Occluder(r,e){if(!defined(r))throw new DeveloperError("occluderBoundingSphere is required.");if(!defined(e))throw new DeveloperError("camera position is required.");this._occluderPosition=Cartesian3.clone(r.center),this._occluderRadius=r.radius,this._horizonDistance=0,this._horizonPlaneNormal=void 0,this._horizonPlanePosition=void 0,this._cameraPosition=void 0,this.cameraPosition=e}var scratchCartesian3=new Cartesian3;Object.defineProperties(Occluder.prototype,{position:{get:function(){return this._occluderPosition}},radius:{get:function(){return this._occluderRadius}},cameraPosition:{set:function(r){if(!defined(r))throw new DeveloperError("cameraPosition is required.");r=Cartesian3.clone(r,this._cameraPosition);var e,i,t,a=Cartesian3.subtract(this._occluderPosition,r,scratchCartesian3),n=Cartesian3.magnitudeSquared(a),o=this._occluderRadius*this._occluderRadius;if(n>o){e=Math.sqrt(n-o),n=1/Math.sqrt(n),i=Cartesian3.multiplyByScalar(a,n,scratchCartesian3);var s=e*e*n;t=Cartesian3.add(r,Cartesian3.multiplyByScalar(i,s,scratchCartesian3),scratchCartesian3)}else e=Number.MAX_VALUE;this._horizonDistance=e,this._horizonPlaneNormal=i,this._horizonPlanePosition=t,this._cameraPosition=r}}}),Occluder.fromBoundingSphere=function(r,e,i){if(!defined(r))throw new DeveloperError("occluderBoundingSphere is required.");if(!defined(e))throw new DeveloperError("camera position is required.");return defined(i)?(Cartesian3.clone(r.center,i._occluderPosition),i._occluderRadius=r.radius,i.cameraPosition=e,i):new Occluder(r,e)};var tempVecScratch=new Cartesian3;Occluder.prototype.isPointVisible=function(r){if(this._horizonDistance!==Number.MAX_VALUE){var e=Cartesian3.subtract(r,this._occluderPosition,tempVecScratch),i=this._occluderRadius;if((i=Cartesian3.magnitudeSquared(e)-i*i)>0)return i=Math.sqrt(i)+this._horizonDistance,e=Cartesian3.subtract(r,this._cameraPosition,e),i*i>Cartesian3.magnitudeSquared(e)}return!1};var occludeePositionScratch=new Cartesian3;Occluder.prototype.isBoundingSphereVisible=function(r){var e=Cartesian3.clone(r.center,occludeePositionScratch),i=r.radius;if(this._horizonDistance!==Number.MAX_VALUE){var t=Cartesian3.subtract(e,this._occluderPosition,tempVecScratch),a=this._occluderRadius-i;if(a=Cartesian3.magnitudeSquared(t)-a*a,i<this._occluderRadius)return a>0&&(a=Math.sqrt(a)+this._horizonDistance,t=Cartesian3.subtract(e,this._cameraPosition,t),a*a+i*i>Cartesian3.magnitudeSquared(t));if(a>0){t=Cartesian3.subtract(e,this._cameraPosition,t);var n=Cartesian3.magnitudeSquared(t),o=this._occluderRadius*this._occluderRadius,s=i*i;return(this._horizonDistance*this._horizonDistance+o)*s>n*o||(a=Math.sqrt(a)+this._horizonDistance)*a+s>n}return!0}return!1};var tempScratch=new Cartesian3;Occluder.prototype.computeVisibility=function(r){if(!defined(r))throw new DeveloperError("occludeeBS is required.");var e=Cartesian3.clone(r.center),i=r.radius;if(i>this._occluderRadius)return Visibility.FULL;if(this._horizonDistance!==Number.MAX_VALUE){var t=Cartesian3.subtract(e,this._occluderPosition,tempScratch),a=this._occluderRadius-i,n=Cartesian3.magnitudeSquared(t);if((a=n-a*a)>0){a=Math.sqrt(a)+this._horizonDistance,t=Cartesian3.subtract(e,this._cameraPosition,t);var o=Cartesian3.magnitudeSquared(t);return a*a+i*i<o?Visibility.NONE:(a=n-(a=this._occluderRadius+i)*a)>0?o<(a=Math.sqrt(a)+this._horizonDistance)*a+i*i?Visibility.FULL:Visibility.PARTIAL:(t=Cartesian3.subtract(e,this._horizonPlanePosition,t),Cartesian3.dot(t,this._horizonPlaneNormal)>-i?Visibility.PARTIAL:Visibility.FULL)}}return Visibility.NONE};var occludeePointScratch=new Cartesian3;Occluder.computeOccludeePoint=function(r,e,i){if(!defined(r))throw new DeveloperError("occluderBoundingSphere is required.");if(!defined(i))throw new DeveloperError("positions is required.");if(0===i.length)throw new DeveloperError("positions must contain at least one element");var t=Cartesian3.clone(e),a=Cartesian3.clone(r.center),n=r.radius,o=i.length;if(Cartesian3.equals(a,e))throw new DeveloperError("occludeePosition must be different than occluderBoundingSphere.center");var s=Cartesian3.normalize(Cartesian3.subtract(t,a,occludeePointScratch),occludeePointScratch),c=-Cartesian3.dot(s,a),u=Occluder._anyRotationVector(a,s,c),d=Occluder._horizonToPlaneNormalDotProduct(r,s,c,u,i[0]);if(d){for(var l,h=1;h<o;++h){if(!(l=Occluder._horizonToPlaneNormalDotProduct(r,s,c,u,i[h])))return;l<d&&(d=l)}if(!(d<.0017453283658983088)){var m=n/d;return Cartesian3.add(a,Cartesian3.multiplyByScalar(s,m,occludeePointScratch),occludeePointScratch)}}};var computeOccludeePointFromRectangleScratch=[];Occluder.computeOccludeePointFromRectangle=function(r,e){if(!defined(r))throw new DeveloperError("rectangle is required.");e=defaultValue(e,Ellipsoid.WGS84);var i=Rectangle.subsample(r,e,0,computeOccludeePointFromRectangleScratch),t=BoundingSphere.fromPoints(i),a=Cartesian3.ZERO;if(!Cartesian3.equals(a,t.center))return Occluder.computeOccludeePoint(new BoundingSphere(a,e.minimumRadius),t.center,i)};var tempVec0Scratch=new Cartesian3;Occluder._anyRotationVector=function(r,e,i){var t=Cartesian3.abs(e,tempVec0Scratch),a=t.x>t.y?0:1;(0===a&&t.z>t.x||1===a&&t.z>t.y)&&(a=2);var n,o=new Cartesian3;0===a?(t.x=r.x,t.y=r.y+1,t.z=r.z+1,n=Cartesian3.UNIT_X):1===a?(t.x=r.x+1,t.y=r.y,t.z=r.z+1,n=Cartesian3.UNIT_Y):(t.x=r.x+1,t.y=r.y+1,t.z=r.z,n=Cartesian3.UNIT_Z);var s=(Cartesian3.dot(e,t)+i)/-Cartesian3.dot(e,n);return Cartesian3.normalize(Cartesian3.subtract(Cartesian3.add(t,Cartesian3.multiplyByScalar(n,s,o),t),r,t),t)};var posDirectionScratch=new Cartesian3;Occluder._rotationVector=function(r,e,i,t,a){var n=Cartesian3.subtract(t,r,posDirectionScratch);if(n=Cartesian3.normalize(n,n),Cartesian3.dot(e,n)<.9999999847691291){var o=Cartesian3.cross(e,n,n);if(Cartesian3.magnitude(o)>CesiumMath.EPSILON13)return Cartesian3.normalize(o,new Cartesian3)}return a};var posScratch1=new Cartesian3,occluerPosScratch=new Cartesian3,posScratch2=new Cartesian3,horizonPlanePosScratch=new Cartesian3;Occluder._horizonToPlaneNormalDotProduct=function(r,e,i,t,a){var n=Cartesian3.clone(a,posScratch1),o=Cartesian3.clone(r.center,occluerPosScratch),s=r.radius,c=Cartesian3.subtract(o,n,posScratch2),u=Cartesian3.magnitudeSquared(c),d=s*s;if(u<d)return!1;var l=u-d,h=Math.sqrt(l),m=h*(1/Math.sqrt(u))*h;c=Cartesian3.normalize(c,c);var C=Cartesian3.add(n,Cartesian3.multiplyByScalar(c,m,horizonPlanePosScratch),horizonPlanePosScratch),p=Math.sqrt(l-m*m),f=this._rotationVector(o,e,i,n,t),P=Cartesian3.fromElements(f.x*f.x*c.x+(f.x*f.y-f.z)*c.y+(f.x*f.z+f.y)*c.z,(f.x*f.y+f.z)*c.x+f.y*f.y*c.y+(f.y*f.z-f.x)*c.z,(f.x*f.z-f.y)*c.x+(f.y*f.z+f.x)*c.y+f.z*f.z*c.z,posScratch1);P=Cartesian3.normalize(P,P);var S=Cartesian3.multiplyByScalar(P,p,posScratch1);f=Cartesian3.normalize(Cartesian3.subtract(Cartesian3.add(C,S,posScratch2),o,posScratch2),posScratch2);var _=Cartesian3.dot(e,f);f=Cartesian3.normalize(Cartesian3.subtract(Cartesian3.subtract(C,S,f),o,f),f);var z=Cartesian3.dot(e,f);return _<z?_:z};export default Occluder;