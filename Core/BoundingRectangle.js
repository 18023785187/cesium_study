import Cartesian2 from"./Cartesian2.js";import Cartographic from"./Cartographic.js";import Check from"./Check.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import GeographicProjection from"./GeographicProjection.js";import Intersect from"./Intersect.js";import Rectangle from"./Rectangle.js";function BoundingRectangle(e,t,n,i){this.x=defaultValue(e,0),this.y=defaultValue(t,0),this.width=defaultValue(n,0),this.height=defaultValue(i,0)}BoundingRectangle.packedLength=4,BoundingRectangle.pack=function(e,t,n){return Check.typeOf.object("value",e),Check.defined("array",t),n=defaultValue(n,0),t[n++]=e.x,t[n++]=e.y,t[n++]=e.width,t[n]=e.height,t},BoundingRectangle.unpack=function(e,t,n){return Check.defined("array",e),t=defaultValue(t,0),defined(n)||(n=new BoundingRectangle),n.x=e[t++],n.y=e[t++],n.width=e[t++],n.height=e[t],n},BoundingRectangle.fromPoints=function(e,t){if(defined(t)||(t=new BoundingRectangle),!defined(e)||0===e.length)return t.x=0,t.y=0,t.width=0,t.height=0,t;for(var n=e.length,i=e[0].x,a=e[0].y,o=e[0].x,r=e[0].y,h=1;h<n;h++){var c=e[h],g=c.x,d=c.y;i=Math.min(g,i),o=Math.max(g,o),a=Math.min(d,a),r=Math.max(d,r)}return t.x=i,t.y=a,t.width=o-i,t.height=r-a,t};var defaultProjection=new GeographicProjection,fromRectangleLowerLeft=new Cartographic,fromRectangleUpperRight=new Cartographic;BoundingRectangle.fromRectangle=function(e,t,n){if(defined(n)||(n=new BoundingRectangle),!defined(e))return n.x=0,n.y=0,n.width=0,n.height=0,n;var i=(t=defaultValue(t,defaultProjection)).project(Rectangle.southwest(e,fromRectangleLowerLeft)),a=t.project(Rectangle.northeast(e,fromRectangleUpperRight));return Cartesian2.subtract(a,i,a),n.x=i.x,n.y=i.y,n.width=a.x,n.height=a.y,n},BoundingRectangle.clone=function(e,t){if(defined(e))return defined(t)?(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,t):new BoundingRectangle(e.x,e.y,e.width,e.height)},BoundingRectangle.union=function(e,t,n){Check.typeOf.object("left",e),Check.typeOf.object("right",t),defined(n)||(n=new BoundingRectangle);var i=Math.min(e.x,t.x),a=Math.min(e.y,t.y),o=Math.max(e.x+e.width,t.x+t.width),r=Math.max(e.y+e.height,t.y+t.height);return n.x=i,n.y=a,n.width=o-i,n.height=r-a,n},BoundingRectangle.expand=function(e,t,n){Check.typeOf.object("rectangle",e),Check.typeOf.object("point",t),n=BoundingRectangle.clone(e,n);var i=t.x-n.x,a=t.y-n.y;return i>n.width?n.width=i:i<0&&(n.width-=i,n.x=t.x),a>n.height?n.height=a:a<0&&(n.height-=a,n.y=t.y),n},BoundingRectangle.intersect=function(e,t){Check.typeOf.object("left",e),Check.typeOf.object("right",t);var n=e.x,i=e.y,a=t.x,o=t.y;return n>a+t.width||n+e.width<a||i+e.height<o||i>o+t.height?Intersect.OUTSIDE:Intersect.INTERSECTING},BoundingRectangle.equals=function(e,t){return e===t||defined(e)&&defined(t)&&e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height},BoundingRectangle.prototype.clone=function(e){return BoundingRectangle.clone(this,e)},BoundingRectangle.prototype.intersect=function(e){return BoundingRectangle.intersect(this,e)},BoundingRectangle.prototype.equals=function(e){return BoundingRectangle.equals(this,e)};export default BoundingRectangle;