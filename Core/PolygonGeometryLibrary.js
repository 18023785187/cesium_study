import ArcType from"./ArcType.js";import arrayRemoveDuplicates from"./arrayRemoveDuplicates.js";import Cartesian2 from"./Cartesian2.js";import Cartesian3 from"./Cartesian3.js";import Cartographic from"./Cartographic.js";import ComponentDatatype from"./ComponentDatatype.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import Ellipsoid from"./Ellipsoid.js";import EllipsoidRhumbLine from"./EllipsoidRhumbLine.js";import Geometry from"./Geometry.js";import GeometryAttribute from"./GeometryAttribute.js";import GeometryAttributes from"./GeometryAttributes.js";import GeometryPipeline from"./GeometryPipeline.js";import IndexDatatype from"./IndexDatatype.js";import CesiumMath from"./Math.js";import Matrix3 from"./Matrix3.js";import PolygonPipeline from"./PolygonPipeline.js";import PrimitiveType from"./PrimitiveType.js";import Quaternion from"./Quaternion.js";import Queue from"./Queue.js";import WindingOrder from"./WindingOrder.js";var PolygonGeometryLibrary={computeHierarchyPackedLength:function(e){for(var r=0,t=[e];t.length>0;){var i=t.pop();if(defined(i)){r+=2;var a=i.positions,o=i.holes;if(defined(a)&&(r+=a.length*Cartesian3.packedLength),defined(o))for(var n=o.length,s=0;s<n;++s)t.push(o[s])}}return r},packPolygonHierarchy:function(e,r,t){for(var i=[e];i.length>0;){var a=i.pop();if(defined(a)){var o=a.positions,n=a.holes;if(r[t++]=defined(o)?o.length:0,r[t++]=defined(n)?n.length:0,defined(o))for(var s=o.length,c=0;c<s;++c,t+=3)Cartesian3.pack(o[c],r,t);if(defined(n))for(var l=n.length,u=0;u<l;++u)i.push(n[u])}}return t},unpackPolygonHierarchy:function(e,r){for(var t=e[r++],i=e[r++],a=new Array(t),o=i>0?new Array(i):void 0,n=0;n<t;++n,r+=Cartesian3.packedLength)a[n]=Cartesian3.unpack(e,r);for(var s=0;s<i;++s)o[s]=PolygonGeometryLibrary.unpackPolygonHierarchy(e,r),r=o[s].startingIndex,delete o[s].startingIndex;return{positions:a,holes:o,startingIndex:r}}},distanceScratch=new Cartesian3;function getPointAtDistance(e,r,t,i){return Cartesian3.subtract(r,e,distanceScratch),Cartesian3.multiplyByScalar(distanceScratch,t/i,distanceScratch),Cartesian3.add(e,distanceScratch,distanceScratch),[distanceScratch.x,distanceScratch.y,distanceScratch.z]}PolygonGeometryLibrary.subdivideLineCount=function(e,r,t){var i=Cartesian3.distance(e,r)/t,a=Math.max(0,Math.ceil(CesiumMath.log2(i)));return Math.pow(2,a)};var scratchCartographic0=new Cartographic,scratchCartographic1=new Cartographic,scratchCartographic2=new Cartographic,scratchCartesian0=new Cartesian3;PolygonGeometryLibrary.subdivideRhumbLineCount=function(e,r,t,i){var a=e.cartesianToCartographic(r,scratchCartographic0),o=e.cartesianToCartographic(t,scratchCartographic1),n=new EllipsoidRhumbLine(a,o,e).surfaceDistance/i,s=Math.max(0,Math.ceil(CesiumMath.log2(n)));return Math.pow(2,s)},PolygonGeometryLibrary.subdivideLine=function(e,r,t,i){var a=PolygonGeometryLibrary.subdivideLineCount(e,r,t),o=Cartesian3.distance(e,r),n=o/a;defined(i)||(i=[]);var s=i;s.length=3*a;for(var c=0,l=0;l<a;l++){var u=getPointAtDistance(e,r,l*n,o);s[c++]=u[0],s[c++]=u[1],s[c++]=u[2]}return s},PolygonGeometryLibrary.subdivideRhumbLine=function(e,r,t,i,a){var o=e.cartesianToCartographic(r,scratchCartographic0),n=e.cartesianToCartographic(t,scratchCartographic1),s=new EllipsoidRhumbLine(o,n,e),c=s.surfaceDistance/i,l=Math.max(0,Math.ceil(CesiumMath.log2(c))),u=Math.pow(2,l),p=s.surfaceDistance/u;defined(a)||(a=[]);var m=a;m.length=3*u;for(var d=0,h=0;h<u;h++){var y=s.interpolateUsingSurfaceDistance(h*p,scratchCartographic2),g=e.cartographicToCartesian(y,scratchCartesian0);m[d++]=g.x,m[d++]=g.y,m[d++]=g.z}return m};var scaleToGeodeticHeightN1=new Cartesian3,scaleToGeodeticHeightN2=new Cartesian3,scaleToGeodeticHeightP1=new Cartesian3,scaleToGeodeticHeightP2=new Cartesian3;PolygonGeometryLibrary.scaleToGeodeticHeightExtruded=function(e,r,t,i,a){i=defaultValue(i,Ellipsoid.WGS84);var o=scaleToGeodeticHeightN1,n=scaleToGeodeticHeightN2,s=scaleToGeodeticHeightP1,c=scaleToGeodeticHeightP2;if(defined(e)&&defined(e.attributes)&&defined(e.attributes.position))for(var l=e.attributes.position.values,u=l.length/2,p=0;p<u;p+=3)Cartesian3.fromArray(l,p,s),i.geodeticSurfaceNormal(s,o),c=i.scaleToGeodeticSurface(s,c),n=Cartesian3.multiplyByScalar(o,t,n),n=Cartesian3.add(c,n,n),l[p+u]=n.x,l[p+1+u]=n.y,l[p+2+u]=n.z,a&&(c=Cartesian3.clone(s,c)),n=Cartesian3.multiplyByScalar(o,r,n),n=Cartesian3.add(c,n,n),l[p]=n.x,l[p+1]=n.y,l[p+2]=n.z;return e},PolygonGeometryLibrary.polygonOutlinesFromHierarchy=function(e,r,t){var i,a,o,n=[],s=new Queue;for(s.enqueue(e);0!==s.length;){var c=s.dequeue(),l=c.positions;if(r)for(o=l.length,i=0;i<o;i++)t.scaleToGeodeticSurface(l[i],l[i]);if(!((l=arrayRemoveDuplicates(l,Cartesian3.equalsEpsilon,!0)).length<3)){var u=c.holes?c.holes.length:0;for(i=0;i<u;i++){var p=c.holes[i],m=p.positions;if(r)for(o=m.length,a=0;a<o;++a)t.scaleToGeodeticSurface(m[a],m[a]);if(!((m=arrayRemoveDuplicates(m,Cartesian3.equalsEpsilon,!0)).length<3)){n.push(m);var d=0;for(defined(p.holes)&&(d=p.holes.length),a=0;a<d;a++)s.enqueue(p.holes[a])}}n.push(l)}}return n},PolygonGeometryLibrary.polygonsFromHierarchy=function(e,r,t,i){var a=[],o=[],n=new Queue;for(n.enqueue(e);0!==n.length;){var s,c,l=n.dequeue(),u=l.positions,p=l.holes;if(t)for(c=u.length,s=0;s<c;s++)i.scaleToGeodeticSurface(u[s],u[s]);if(!((u=arrayRemoveDuplicates(u,Cartesian3.equalsEpsilon,!0)).length<3)){var m=r(u);if(defined(m)){var d=[],h=PolygonPipeline.computeWindingOrder2D(m);h===WindingOrder.CLOCKWISE&&(m.reverse(),u=u.slice().reverse());var y,g=u.slice(),f=defined(p)?p.length:0,v=[];for(s=0;s<f;s++){var C=p[s],b=C.positions;if(t)for(c=b.length,y=0;y<c;++y)i.scaleToGeodeticSurface(b[y],b[y]);if(!((b=arrayRemoveDuplicates(b,Cartesian3.equalsEpsilon,!0)).length<3)){var G=r(b);if(defined(G)){(h=PolygonPipeline.computeWindingOrder2D(G))===WindingOrder.CLOCKWISE&&(G.reverse(),b=b.slice().reverse()),v.push(b),d.push(g.length),g=g.concat(b),m=m.concat(G);var P=0;for(defined(C.holes)&&(P=C.holes.length),y=0;y<P;y++)n.enqueue(C.holes[y])}}}a.push({outerRing:u,holes:v}),o.push({positions:g,positions2D:m,holes:d})}}}return{hierarchy:a,polygons:o}};var computeBoundingRectangleCartesian2=new Cartesian2,computeBoundingRectangleCartesian3=new Cartesian3,computeBoundingRectangleQuaternion=new Quaternion,computeBoundingRectangleMatrix3=new Matrix3;PolygonGeometryLibrary.computeBoundingRectangle=function(e,r,t,i,a){for(var o=Quaternion.fromAxisAngle(e,i,computeBoundingRectangleQuaternion),n=Matrix3.fromQuaternion(o,computeBoundingRectangleMatrix3),s=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY,l=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,p=t.length,m=0;m<p;++m){var d=Cartesian3.clone(t[m],computeBoundingRectangleCartesian3);Matrix3.multiplyByVector(n,d,d);var h=r(d,computeBoundingRectangleCartesian2);defined(h)&&(s=Math.min(s,h.x),c=Math.max(c,h.x),l=Math.min(l,h.y),u=Math.max(u,h.y))}return a.x=s,a.y=l,a.width=c-s,a.height=u-l,a},PolygonGeometryLibrary.createGeometryFromPositions=function(e,r,t,i,a,o){var n=PolygonPipeline.triangulate(r.positions2D,r.holes);n.length<3&&(n=[0,1,2]);var s=r.positions;if(i){for(var c=s.length,l=new Array(3*c),u=0,p=0;p<c;p++){var m=s[p];l[u++]=m.x,l[u++]=m.y,l[u++]=m.z}var d=new Geometry({attributes:{position:new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:l})},indices:n,primitiveType:PrimitiveType.TRIANGLES});return a.normal?GeometryPipeline.computeNormal(d):d}return o===ArcType.GEODESIC?PolygonPipeline.computeSubdivision(e,s,n,t):o===ArcType.RHUMB?PolygonPipeline.computeRhumbLineSubdivision(e,s,n,t):void 0};var computeWallIndicesSubdivided=[],p1Scratch=new Cartesian3,p2Scratch=new Cartesian3;PolygonGeometryLibrary.computeWallGeometry=function(e,r,t,i,a){var o,n,s,c,l,u=e.length,p=0;if(i)for(n=3*u*2,o=new Array(2*n),s=0;s<u;s++)c=e[s],l=e[(s+1)%u],o[p]=o[p+n]=c.x,o[++p]=o[p+n]=c.y,o[++p]=o[p+n]=c.z,o[++p]=o[p+n]=l.x,o[++p]=o[p+n]=l.y,o[++p]=o[p+n]=l.z,++p;else{var m=CesiumMath.chordLength(t,r.maximumRadius),d=0;if(a===ArcType.GEODESIC)for(s=0;s<u;s++)d+=PolygonGeometryLibrary.subdivideLineCount(e[s],e[(s+1)%u],m);else if(a===ArcType.RHUMB)for(s=0;s<u;s++)d+=PolygonGeometryLibrary.subdivideRhumbLineCount(r,e[s],e[(s+1)%u],m);for(n=3*(d+u),o=new Array(2*n),s=0;s<u;s++){var h;c=e[s],l=e[(s+1)%u],a===ArcType.GEODESIC?h=PolygonGeometryLibrary.subdivideLine(c,l,m,computeWallIndicesSubdivided):a===ArcType.RHUMB&&(h=PolygonGeometryLibrary.subdivideRhumbLine(r,c,l,m,computeWallIndicesSubdivided));for(var y=h.length,g=0;g<y;++g,++p)o[p]=h[g],o[p+n]=h[g];o[p]=l.x,o[p+n]=l.x,o[++p]=l.y,o[p+n]=l.y,o[++p]=l.z,o[p+n]=l.z,++p}}u=o.length;var f=IndexDatatype.createTypedArray(u/3,u-6*e.length),v=0;for(u/=6,s=0;s<u;s++){var C=s,b=C+1,G=C+u,P=G+1;c=Cartesian3.fromArray(o,3*C,p1Scratch),l=Cartesian3.fromArray(o,3*b,p2Scratch),Cartesian3.equalsEpsilon(c,l,CesiumMath.EPSILON10,CesiumMath.EPSILON10)||(f[v++]=C,f[v++]=G,f[v++]=b,f[v++]=b,f[v++]=G,f[v++]=P)}return new Geometry({attributes:new GeometryAttributes({position:new GeometryAttribute({componentDatatype:ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:o})}),indices:f,primitiveType:PrimitiveType.TRIANGLES})};export default PolygonGeometryLibrary;