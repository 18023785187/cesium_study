import Cartesian3 from"./Cartesian3.js";import Cartesian4 from"./Cartesian4.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import LinearSpline from"./LinearSpline.js";import Matrix4 from"./Matrix4.js";import Spline from"./Spline.js";import TridiagonalSystemSolver from"./TridiagonalSystemSolver.js";var scratchLower=[],scratchDiagonal=[],scratchUpper=[],scratchRight=[];function generateClamped(e,t,n){var r,i=scratchLower,a=scratchUpper,l=scratchDiagonal,s=scratchRight;i.length=a.length=e.length-1,l.length=s.length=e.length,i[0]=l[0]=1,a[0]=0;var o=s[0];for(defined(o)||(o=s[0]=new Cartesian3),Cartesian3.clone(t,o),r=1;r<i.length-1;++r)i[r]=a[r]=1,l[r]=4,o=s[r],defined(o)||(o=s[r]=new Cartesian3),Cartesian3.subtract(e[r+1],e[r-1],o),Cartesian3.multiplyByScalar(o,3,o);return i[r]=0,a[r]=1,l[r]=4,o=s[r],defined(o)||(o=s[r]=new Cartesian3),Cartesian3.subtract(e[r+1],e[r-1],o),Cartesian3.multiplyByScalar(o,3,o),l[r+1]=1,o=s[r+1],defined(o)||(o=s[r+1]=new Cartesian3),Cartesian3.clone(n,o),TridiagonalSystemSolver.solve(i,l,a,s)}function generateNatural(e){var t,n=scratchLower,r=scratchUpper,i=scratchDiagonal,a=scratchRight;n.length=r.length=e.length-1,i.length=a.length=e.length,n[0]=r[0]=1,i[0]=2;var l=a[0];for(defined(l)||(l=a[0]=new Cartesian3),Cartesian3.subtract(e[1],e[0],l),Cartesian3.multiplyByScalar(l,3,l),t=1;t<n.length;++t)n[t]=r[t]=1,i[t]=4,l=a[t],defined(l)||(l=a[t]=new Cartesian3),Cartesian3.subtract(e[t+1],e[t-1],l),Cartesian3.multiplyByScalar(l,3,l);return i[t]=2,l=a[t],defined(l)||(l=a[t]=new Cartesian3),Cartesian3.subtract(e[t],e[t-1],l),Cartesian3.multiplyByScalar(l,3,l),TridiagonalSystemSolver.solve(n,i,r,a)}function HermiteSpline(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).points,n=e.times,r=e.inTangents,i=e.outTangents;if(!(defined(t)&&defined(n)&&defined(r)&&defined(i)))throw new DeveloperError("times, points, inTangents, and outTangents are required.");if(t.length<2)throw new DeveloperError("points.length must be greater than or equal to 2.");if(n.length!==t.length)throw new DeveloperError("times.length must be equal to points.length.");if(r.length!==i.length||r.length!==t.length-1)throw new DeveloperError("inTangents and outTangents must have a length equal to points.length - 1.");this._times=n,this._points=t,this._inTangents=r,this._outTangents=i,this._lastTimeIndex=0}Object.defineProperties(HermiteSpline.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},inTangents:{get:function(){return this._inTangents}},outTangents:{get:function(){return this._outTangents}}}),HermiteSpline.createC1=function(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).times,n=e.points,r=e.tangents;if(!defined(n)||!defined(t)||!defined(r))throw new DeveloperError("points, times and tangents are required.");if(n.length<2)throw new DeveloperError("points.length must be greater than or equal to 2.");if(t.length!==n.length||t.length!==r.length)throw new DeveloperError("times, points and tangents must have the same length.");var i=r.slice(0,r.length-1);return new HermiteSpline({times:t,points:n,inTangents:r.slice(1,r.length),outTangents:i})},HermiteSpline.createNaturalCubic=function(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).times,n=e.points;if(!defined(n)||!defined(t))throw new DeveloperError("points and times are required.");if(n.length<2)throw new DeveloperError("points.length must be greater than or equal to 2.");if(t.length!==n.length)throw new DeveloperError("times.length must be equal to points.length.");if(n.length<3)return new LinearSpline({points:n,times:t});var r=generateNatural(n),i=r.slice(0,r.length-1);return new HermiteSpline({times:t,points:n,inTangents:r.slice(1,r.length),outTangents:i})},HermiteSpline.createClampedCubic=function(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).times,n=e.points,r=e.firstTangent,i=e.lastTangent;if(!(defined(n)&&defined(t)&&defined(r)&&defined(i)))throw new DeveloperError("points, times, firstTangent and lastTangent are required.");if(n.length<2)throw new DeveloperError("points.length must be greater than or equal to 2.");if(t.length!==n.length)throw new DeveloperError("times.length must be equal to points.length.");if(n.length<3)return new LinearSpline({points:n,times:t});var a=generateClamped(n,r,i),l=a.slice(0,a.length-1);return new HermiteSpline({times:t,points:n,inTangents:a.slice(1,a.length),outTangents:l})},HermiteSpline.hermiteCoefficientMatrix=new Matrix4(2,-3,0,1,-2,3,0,0,1,-2,1,0,1,-1,0,0),HermiteSpline.prototype.findTimeInterval=Spline.prototype.findTimeInterval;var scratchTimeVec=new Cartesian4,scratchTemp=new Cartesian3;HermiteSpline.prototype.wrapTime=Spline.prototype.wrapTime,HermiteSpline.prototype.clampTime=Spline.prototype.clampTime,HermiteSpline.prototype.evaluate=function(e,t){defined(t)||(t=new Cartesian3);var n=this.points,r=this.times,i=this.inTangents,a=this.outTangents,l=this._lastTimeIndex=this.findTimeInterval(e,this._lastTimeIndex),s=(e-r[l])/(r[l+1]-r[l]),o=scratchTimeVec;o.z=s,o.y=s*s,o.x=o.y*s,o.w=1;var p=Matrix4.multiplyByVector(HermiteSpline.hermiteCoefficientMatrix,o,o);return t=Cartesian3.multiplyByScalar(n[l],p.x,t),Cartesian3.multiplyByScalar(n[l+1],p.y,scratchTemp),Cartesian3.add(t,scratchTemp,t),Cartesian3.multiplyByScalar(a[l],p.z,scratchTemp),Cartesian3.add(t,scratchTemp,t),Cartesian3.multiplyByScalar(i[l],p.w,scratchTemp),Cartesian3.add(t,scratchTemp,t)};export default HermiteSpline;