import Cartesian3 from"./Cartesian3.js";import Cartesian4 from"./Cartesian4.js";import CullingVolume from"./CullingVolume.js";import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import CesiumMath from"./Math.js";import Matrix4 from"./Matrix4.js";function OrthographicOffCenterFrustum(t){t=defaultValue(t,defaultValue.EMPTY_OBJECT),this.left=t.left,this._left=void 0,this.right=t.right,this._right=void 0,this.top=t.top,this._top=void 0,this.bottom=t.bottom,this._bottom=void 0,this.near=defaultValue(t.near,1),this._near=this.near,this.far=defaultValue(t.far,5e8),this._far=this.far,this._cullingVolume=new CullingVolume,this._orthographicMatrix=new Matrix4}function update(t){if(!(defined(t.right)&&defined(t.left)&&defined(t.top)&&defined(t.bottom)&&defined(t.near)&&defined(t.far)))throw new DeveloperError("right, left, top, bottom, near, or far parameters are not set.");if(t.top!==t._top||t.bottom!==t._bottom||t.left!==t._left||t.right!==t._right||t.near!==t._near||t.far!==t._far){if(t.left>t.right)throw new DeveloperError("right must be greater than left.");if(t.bottom>t.top)throw new DeveloperError("top must be greater than bottom.");if(t.near<=0||t.near>t.far)throw new DeveloperError("near must be greater than zero and less than far.");t._left=t.left,t._right=t.right,t._top=t.top,t._bottom=t.bottom,t._near=t.near,t._far=t.far,t._orthographicMatrix=Matrix4.computeOrthographicOffCenter(t.left,t.right,t.bottom,t.top,t.near,t.far,t._orthographicMatrix)}}Object.defineProperties(OrthographicOffCenterFrustum.prototype,{projectionMatrix:{get:function(){return update(this),this._orthographicMatrix}}});var getPlanesRight=new Cartesian3,getPlanesNearCenter=new Cartesian3,getPlanesPoint=new Cartesian3,negateScratch=new Cartesian3;OrthographicOffCenterFrustum.prototype.computeCullingVolume=function(t,e,r){if(!defined(t))throw new DeveloperError("position is required.");if(!defined(e))throw new DeveloperError("direction is required.");if(!defined(r))throw new DeveloperError("up is required.");var i=this._cullingVolume.planes,a=this.top,o=this.bottom,n=this.right,s=this.left,h=this.near,f=this.far,l=Cartesian3.cross(e,r,getPlanesRight);Cartesian3.normalize(l,l);var u=getPlanesNearCenter;Cartesian3.multiplyByScalar(e,h,u),Cartesian3.add(t,u,u);var d=getPlanesPoint;Cartesian3.multiplyByScalar(l,s,d),Cartesian3.add(u,d,d);var p=i[0];return defined(p)||(p=i[0]=new Cartesian4),p.x=l.x,p.y=l.y,p.z=l.z,p.w=-Cartesian3.dot(l,d),Cartesian3.multiplyByScalar(l,n,d),Cartesian3.add(u,d,d),p=i[1],defined(p)||(p=i[1]=new Cartesian4),p.x=-l.x,p.y=-l.y,p.z=-l.z,p.w=-Cartesian3.dot(Cartesian3.negate(l,negateScratch),d),Cartesian3.multiplyByScalar(r,o,d),Cartesian3.add(u,d,d),p=i[2],defined(p)||(p=i[2]=new Cartesian4),p.x=r.x,p.y=r.y,p.z=r.z,p.w=-Cartesian3.dot(r,d),Cartesian3.multiplyByScalar(r,a,d),Cartesian3.add(u,d,d),p=i[3],defined(p)||(p=i[3]=new Cartesian4),p.x=-r.x,p.y=-r.y,p.z=-r.z,p.w=-Cartesian3.dot(Cartesian3.negate(r,negateScratch),d),p=i[4],defined(p)||(p=i[4]=new Cartesian4),p.x=e.x,p.y=e.y,p.z=e.z,p.w=-Cartesian3.dot(e,u),Cartesian3.multiplyByScalar(e,f,d),Cartesian3.add(t,d,d),p=i[5],defined(p)||(p=i[5]=new Cartesian4),p.x=-e.x,p.y=-e.y,p.z=-e.z,p.w=-Cartesian3.dot(Cartesian3.negate(e,negateScratch),d),this._cullingVolume},OrthographicOffCenterFrustum.prototype.getPixelDimensions=function(t,e,r,i,a){if(update(this),!defined(t)||!defined(e))throw new DeveloperError("Both drawingBufferWidth and drawingBufferHeight are required.");if(t<=0)throw new DeveloperError("drawingBufferWidth must be greater than zero.");if(e<=0)throw new DeveloperError("drawingBufferHeight must be greater than zero.");if(!defined(r))throw new DeveloperError("distance is required.");if(!defined(i))throw new DeveloperError("pixelRatio is required.");if(i<=0)throw new DeveloperError("pixelRatio must be greater than zero.");if(!defined(a))throw new DeveloperError("A result object is required.");var o=i*(this.right-this.left)/t,n=i*(this.top-this.bottom)/e;return a.x=o,a.y=n,a},OrthographicOffCenterFrustum.prototype.clone=function(t){return defined(t)||(t=new OrthographicOffCenterFrustum),t.left=this.left,t.right=this.right,t.top=this.top,t.bottom=this.bottom,t.near=this.near,t.far=this.far,t._left=void 0,t._right=void 0,t._top=void 0,t._bottom=void 0,t._near=void 0,t._far=void 0,t},OrthographicOffCenterFrustum.prototype.equals=function(t){return defined(t)&&t instanceof OrthographicOffCenterFrustum&&this.right===t.right&&this.left===t.left&&this.top===t.top&&this.bottom===t.bottom&&this.near===t.near&&this.far===t.far},OrthographicOffCenterFrustum.prototype.equalsEpsilon=function(t,e,r){return t===this||defined(t)&&t instanceof OrthographicOffCenterFrustum&&CesiumMath.equalsEpsilon(this.right,t.right,e,r)&&CesiumMath.equalsEpsilon(this.left,t.left,e,r)&&CesiumMath.equalsEpsilon(this.top,t.top,e,r)&&CesiumMath.equalsEpsilon(this.bottom,t.bottom,e,r)&&CesiumMath.equalsEpsilon(this.near,t.near,e,r)&&CesiumMath.equalsEpsilon(this.far,t.far,e,r)};export default OrthographicOffCenterFrustum;