import Cartesian2 from"./Cartesian2.js";import Cartesian3 from"./Cartesian3.js";import Check from"./Check.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";var Intersections2D={clipTriangleAtAxisAlignedThreshold:function(e,r,p,s,u,h){if(!defined(e))throw new DeveloperError("threshold is required.");if(!defined(r))throw new DeveloperError("keepAbove is required.");if(!defined(p))throw new DeveloperError("u0 is required.");if(!defined(s))throw new DeveloperError("u1 is required.");if(!defined(u))throw new DeveloperError("u2 is required.");var i,n,o;defined(h)?h.length=0:h=[],r?(i=p<e,n=s<e,o=u<e):(i=p>e,n=s>e,o=u>e);var d,t,f,w,v,a,l=i+n+o;return 1===l?i?(d=(e-p)/(s-p),t=(e-p)/(u-p),h.push(1),h.push(2),1!==t&&(h.push(-1),h.push(0),h.push(2),h.push(t)),1!==d&&(h.push(-1),h.push(0),h.push(1),h.push(d))):n?(f=(e-s)/(u-s),w=(e-s)/(p-s),h.push(2),h.push(0),1!==w&&(h.push(-1),h.push(1),h.push(0),h.push(w)),1!==f&&(h.push(-1),h.push(1),h.push(2),h.push(f))):o&&(v=(e-u)/(p-u),a=(e-u)/(s-u),h.push(0),h.push(1),1!==a&&(h.push(-1),h.push(2),h.push(1),h.push(a)),1!==v&&(h.push(-1),h.push(2),h.push(0),h.push(v))):2===l?i||p===e?n||s===e?o||u===e||(t=(e-p)/(u-p),f=(e-s)/(u-s),h.push(2),h.push(-1),h.push(0),h.push(2),h.push(t),h.push(-1),h.push(1),h.push(2),h.push(f)):(a=(e-u)/(s-u),d=(e-p)/(s-p),h.push(1),h.push(-1),h.push(2),h.push(1),h.push(a),h.push(-1),h.push(0),h.push(1),h.push(d)):(w=(e-s)/(p-s),v=(e-u)/(p-u),h.push(0),h.push(-1),h.push(1),h.push(0),h.push(w),h.push(-1),h.push(2),h.push(0),h.push(v)):3!==l&&(h.push(0),h.push(1),h.push(2)),h},computeBarycentricCoordinates:function(e,r,p,s,u,h,i,n,o){if(!defined(e))throw new DeveloperError("x is required.");if(!defined(r))throw new DeveloperError("y is required.");if(!defined(p))throw new DeveloperError("x1 is required.");if(!defined(s))throw new DeveloperError("y1 is required.");if(!defined(u))throw new DeveloperError("x2 is required.");if(!defined(h))throw new DeveloperError("y2 is required.");if(!defined(i))throw new DeveloperError("x3 is required.");if(!defined(n))throw new DeveloperError("y3 is required.");var d=p-i,t=i-u,f=h-n,w=s-n,v=1/(f*d+t*w),a=r-n,l=e-i,m=(f*l+t*a)*v,c=(-w*l+d*a)*v,y=1-m-c;return defined(o)?(o.x=m,o.y=c,o.z=y,o):new Cartesian3(m,c,y)},computeLineSegmentLineSegmentIntersection:function(e,r,p,s,u,h,i,n,o){Check.typeOf.number("x00",e),Check.typeOf.number("y00",r),Check.typeOf.number("x01",p),Check.typeOf.number("y01",s),Check.typeOf.number("x10",u),Check.typeOf.number("y10",h),Check.typeOf.number("x11",i),Check.typeOf.number("y11",n);var d=(n-h)*(p-e)-(i-u)*(s-r);if(0!==d){var t=((i-u)*(r-h)-(n-h)*(e-u))/d,f=((p-e)*(r-h)-(s-r)*(e-u))/d;return t>=0&&t<=1&&f>=0&&f<=1?(defined(o)||(o=new Cartesian2),o.x=e+t*(p-e),o.y=r+t*(s-r),o):void 0}}};export default Intersections2D;