import defaultValue from"./defaultValue.js";import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";import Quaternion from"./Quaternion.js";import Spline from"./Spline.js";function createEvaluateFunction(e){var t=e.points,n=e.times;return function(i,r){defined(r)||(r=new Quaternion);var o=e._lastTimeIndex=e.findTimeInterval(i,e._lastTimeIndex),p=(i-n[o])/(n[o+1]-n[o]),a=t[o],l=t[o+1];return Quaternion.fastSlerp(a,l,p,r)}}function QuaternionSpline(e){var t=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).points,n=e.times;if(!defined(t)||!defined(n))throw new DeveloperError("points and times are required.");if(t.length<2)throw new DeveloperError("points.length must be greater than or equal to 2.");if(n.length!==t.length)throw new DeveloperError("times.length must be equal to points.length.");this._times=n,this._points=t,this._evaluateFunction=createEvaluateFunction(this),this._lastTimeIndex=0}Object.defineProperties(QuaternionSpline.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}}}),QuaternionSpline.prototype.findTimeInterval=Spline.prototype.findTimeInterval,QuaternionSpline.prototype.wrapTime=Spline.prototype.wrapTime,QuaternionSpline.prototype.clampTime=Spline.prototype.clampTime,QuaternionSpline.prototype.evaluate=function(e,t){return this._evaluateFunction(e,t)};export default QuaternionSpline;