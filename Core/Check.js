import defined from"./defined.js";import DeveloperError from"./DeveloperError.js";var Check={};function getUndefinedErrorMessage(e){return e+" is required, actual value was undefined"}function getFailedTypeErrorMessage(e,r,t){return"Expected "+t+" to be typeof "+r+", actual typeof was "+e}Check.typeOf={},Check.defined=function(e,r){if(!defined(r))throw new DeveloperError(getUndefinedErrorMessage(e))},Check.typeOf.func=function(e,r){if("function"!=typeof r)throw new DeveloperError(getFailedTypeErrorMessage(typeof r,"function",e))},Check.typeOf.string=function(e,r){if("string"!=typeof r)throw new DeveloperError(getFailedTypeErrorMessage(typeof r,"string",e))},Check.typeOf.number=function(e,r){if("number"!=typeof r)throw new DeveloperError(getFailedTypeErrorMessage(typeof r,"number",e))},Check.typeOf.number.lessThan=function(e,r,t){if(Check.typeOf.number(e,r),r>=t)throw new DeveloperError("Expected "+e+" to be less than "+t+", actual value was "+r)},Check.typeOf.number.lessThanOrEquals=function(e,r,t){if(Check.typeOf.number(e,r),r>t)throw new DeveloperError("Expected "+e+" to be less than or equal to "+t+", actual value was "+r)},Check.typeOf.number.greaterThan=function(e,r,t){if(Check.typeOf.number(e,r),r<=t)throw new DeveloperError("Expected "+e+" to be greater than "+t+", actual value was "+r)},Check.typeOf.number.greaterThanOrEquals=function(e,r,t){if(Check.typeOf.number(e,r),r<t)throw new DeveloperError("Expected "+e+" to be greater than or equal to "+t+", actual value was "+r)},Check.typeOf.object=function(e,r){if("object"!=typeof r)throw new DeveloperError(getFailedTypeErrorMessage(typeof r,"object",e))},Check.typeOf.bool=function(e,r){if("boolean"!=typeof r)throw new DeveloperError(getFailedTypeErrorMessage(typeof r,"boolean",e))},Check.typeOf.bigint=function(e,r){if("bigint"!=typeof r)throw new DeveloperError(getFailedTypeErrorMessage(typeof r,"bigint",e))},Check.typeOf.number.equals=function(e,r,t,o){if(Check.typeOf.number(e,t),Check.typeOf.number(r,o),t!==o)throw new DeveloperError(e+" must be equal to "+r+", the actual values are "+t+" and "+o)};export default Check;